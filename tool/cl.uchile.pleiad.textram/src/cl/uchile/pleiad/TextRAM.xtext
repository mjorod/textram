grammar cl.uchile.pleiad.TextRAM with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://cs.mcgill.ca/sel/ram/2.1"

generate textRam "http://cl.pleiad.textram/1.0" as textRam

Aspect returns Aspect:
'aspect'
name=EString
'{'
	structuralView=TStructuralView
	('instantiations' '{' instantiations+=Instantiation ( ";"? instantiations+=Instantiation)* '}' )?
	('messages' '{' messageViews+=AbstractMessageView ( ";"? messageViews+=AbstractMessageView)* '}' )?
'}';

terminal TEMPLATE: (ID'<' ID '>')*;

EString returns ecore::EString:
    STRING | ID | TEMPLATE;

EInt returns ecore::EInt:
    '-'? INT;
    
ReferenceType returns ReferenceType:
    'ReferenceType' /* TODO: implement this rule and an appropriate IValueConverter */;    

AbstractStructuralView returns StructuralView:
    TStructuralView
;

AbstractMessageView returns AbstractMessageView:
	TMessageView;

TStructuralView returns textRam::TStructuralView:
    {textRam::TStructuralView}
    'structure'
    '{'
        ( classes+=Classifier (classes+=Classifier)* )?
        ('associations' '{' tAssociations+=TAssociation ( "," tAssociations+=TAssociation)* '}' )?
    '}';
        
Classifier returns Classifier:
    TClass;

Type returns Type:
    TClass | RVoid | RBoolean | RInt | RChar | RString | RAny |  RDouble | RFloat | RSet;

ObjectType returns ObjectType:
    TClass | RBoolean | RInt | RChar | RString | RSet | RDouble | RFloat;    
        
PrimitiveType returns PrimitiveType:
    RBoolean | RInt | RChar | RString | RDouble | RFloat;// | REnum;


RString:
    {RString}
;

RFloat:
    {RFloat}
;

RDouble:
    {RDouble}
;

RAny:
    {RAny}
;

RChar:
    {RChar}
;

RInt:
    {RInt}
;

RBoolean:
    {RBoolean}
;

RVoid:
    {RVoid}
;

RSet returns RSet:
	{RSet}
;

AbstractClass returns Class:
	TClass
;

TClassMember returns textRam::TClassMember:
	TAttribute | TOperation
;
  
TClass returns textRam::TClass:
    {textRam::TClass}
    (abstract?='abstract')?
    'class'
    (partial?='|')?
    name=EString (':' superTypes+=[Classifier|EString])?
    '{'
    	( members+=TClassMember  ( ";"? members+= TClassMember)*  )?
    '}';

TAttribute returns textRam::TAttribute:
    {textRam::TAttribute}
    (static?='static')?
    type=[PrimitiveType|EString]
    name=EString;

TOperation returns textRam::TOperation:
    {textRam::TOperation}
    (abstract?='abstract')?
    (static?='static')?
    visibility=Visibility
    returnType=[Type|EString]
    (partial?='|')?
    name=EString 
    '('
    	( parameters+=Parameter ( "," parameters+=Parameter)* )?
    ')';
    
TOperationSignature returns textRam::TOperationSignature:
	
	operation=[textRam::TOperation|EString]
	'('
    	( parameters+=Parameter ( "," parameters+=Parameter)* )?
    ')'
    ':'
    returnType=[Type|EString]
;

TStructuralFeature returns textRam::TStructuralFeature:
	TAssociation | TAttribute //TODO: | Reference 
;

Parameter returns Parameter:
    {Parameter}
    type=[Type|EString]
    name=EString;  

enum Visibility returns Visibility:
	public = '+' | private = '-' | protected = '#' | package = "~" 
;

TAssociation returns textRam::TAssociation:
    {textRam::TAssociation}
    fromEnd=TAssociationEnd "->" toEnd=TAssociationEnd  '{' name=EString  '}'  
;

TAssociationEnd returns textRam::TAssociationEnd:
	{textRam::TAssociationEnd}
    (lowerBound=ElementBound
    '..')?
    (upperBound=ElementBound)?
    classReference=[Class|EString]
;

ElementBound returns ecore::EInt:
	'*' | INT;
	
Instantiation returns Instantiation:
    (type=InstantiationType)?
    externalAspect=[Aspect|EString]
    ('{' mappings+=TClassifierMapping ( ";"? mappings+=TClassifierMapping)* '}' )
;
    
enum InstantiationType returns InstantiationType:
    Depends = 'dependsOn' | Extends = 'extends';
    

AbstractClassifierMapping returns ClassifierMapping:
    TClassifierMapping
; 

TClassifierMapping returns textRam::TClassifierMapping:
    ('|')?
    fromElement=[Classifier|EString] ('<' ('|')? fromMember+=[textRam::TClassMember] ("," ('|')? fromMember+=[textRam::TClassMember])* '>')?
    '->'
    toElement=[Classifier|EString] ('<' ('|')? toMember+=[textRam::TClassMember] ("," ('|')? toMember+=[textRam::TClassMember])*  '>')?
;

TMessageView returns textRam::TMessageView:
	{textRam::TMessageView}
	'messageView' (class=[textRam::TClass]'.')? specifies=[textRam::TOperation|EString] '{'
		specification=TInteraction
	'}'
;

TInteraction returns textRam::TInteraction:
	'objects' '{'
		lifelines+=TLifeline (';'? lifelines+=TLifeline)*
	'}'
	interactionMessages+=TInteractionMessage (';'? interactionMessages+=TInteractionMessage)*
;

TLifeline returns textRam::TLifeline:
	name=EString ':' represents=[textRam::TTypedElement|EString]
;

TInteractionMessage returns textRam::TInteractionMessage:
	leftLifeline=[textRam::TLifeline|EString] '=>' rightLifeline=[textRam::TLifeline|EString] '{'  messages+=TAbstractMessage (';'? messages+=TAbstractMessage)*  '}'
;

TAbstractMessage returns textRam::TAbstractMessage:
	TMessage | TOperationSignature
;

TMessage returns textRam::TMessage:
	(assignTo=[textRam::TStructuralFeature|EString] ':=')?
	signature=[textRam::TOperation|EString] '(' ( arguments+=[Parameter|EString] (',' arguments+=[Parameter|EString] )?  )? ')'
;

//TODO: It should be StructuralFeature | Parameter
TTypedElement returns textRam::TTypedElement:
	TAssociation | TAttribute | TClass
;

enum MessageSort returns MessageSort:
    synchCall = 'synchCall' | createMessage = 'createMessage' | deleteMessage = 'deleteMessage' | reply = 'reply'
;


ValueSpecification returns ValueSpecification:
    StructuralFeatureValue | ParameterValue | OpaqueExpression | LiteralString | LiteralInteger | LiteralBoolean
;

StructuralFeatureValue returns StructuralFeatureValue:
    value=[StructuralFeature|EString]
;

ParameterValue returns ParameterValue:
	parameter=[Parameter|EString]
;

OpaqueExpression returns OpaqueExpression:
	'body' body=EString
    'language' language=EString
;

LiteralString returns LiteralString:
	'value' value=EString
;

LiteralInteger returns LiteralInteger:
	'value' value=EInt
;

LiteralBoolean returns LiteralBoolean:
    value?='value'
;


//TInteractionMessage returns textRAM::TInteractionMessage:
//	
//;

//AbstractInteraction returns Interaction:
//	TInteraction
//;
//
//TInteraction returns textRam::TInteraction:
//	'objects' '{' 
//		objects+=TLifeline (';'? objects+=TLifeline )*
//	'}'
//	interactionMessages+=TInteractionMessage
//;
//
//TInteractionMessage returns textRam::TInteractionMessage:
//	{textRam::TInteractionMessage}
//	leftLifeline=[textRam::TLifeline|EString] '=>' rightLifeline=[textRam::TLifeline]
//;
//
//TLifeline returns textRam::TLifeline:
//	name=EString ':' represents=[textRam::TStructuralFeature]; 
//
//TStructuralFeature returns textRam::TStructuralFeature:
//        TAssociationEnd | TAttribute | TClass;

//Message returns Message:
//	'Message'
//	'{'
//		'messageSort' messageSort=MessageSort
////	    'sendEvent' sendEvent=[MessageEnd|EString]
////	    'receiveEvent' receiveEvent=[MessageEnd|EString]
////	    'signature' signature=[Operation|EString]
////	    ('assignTo' assignTo=[StructuralFeature|EString])?
//	    //('arguments' '{' arguments+=ParameterValueMapping ( "," arguments+=ParameterValueMapping)* '}' )?
//	    //('returns' ^returns=ValueSpecification)?
//	'}';
//	
//

//	'Interaction'
//	'{'
//	    'fragments' '{' fragments+=InteractionFragment ( "," fragments+=InteractionFragment)* '}' 
//	    'lifelines' '{' lifelines+=Lifeline ( "," lifelines+=Lifeline)* '}' 
//	    'messages' '{' messages+=Message ( "," messages+=Message)* '}' 
//	    ('properties' '{' properties+=Reference ( "," properties+=Reference)* '}' )?
//	    ('formalGates' '{' formalGates+=Gate ( "," formalGates+=Gate)* '}' )?
//	'}';

//Lifeline returns Lifeline:
//    //localProperties+=TemporaryProperty? -> temp variables
//    represents=[TypedElement|EString]
//    'Lifeline'
//    '{'
//        
//        'coveredBy' '(' coveredBy+=[InteractionFragment|EString] ( "," coveredBy+=[InteractionFragment|EString])* ')' 
//        
//    '}';
    
//TemporaryProperty returns TemporaryProperty:
//    TAttribute | Reference;

//TypedElement returns TypedElement:
//	Reference;
	    
//Reference returns Reference:
//    static?='static'
//    'Reference'
//    name=EString ':' type=[ObjectType|EString];    
//


//MessageView returns MessageView:
//    'MessageView'
//    '{'
//        ('affectedBy' '(' affectedBy+=[AspectMessageView|EString] ( "," affectedBy+=[AspectMessageView|EString])* ')' )?
//        'specifies' specifies=[Operation|EString]
//        ('specification' specification=Interaction)?
//    '}';
//    
//Interaction returns Interaction:
//    'Interaction'
//    '{'
//        'fragments' '{' fragments+=InteractionFragment ( "," fragments+=InteractionFragment)* '}' 
//        'lifelines' '{' lifelines+=Lifeline ( "," lifelines+=Lifeline)* '}' 
//        'messages' '{' messages+=Message ( "," messages+=Message)* '}' 
//        ('properties' '{' properties+=Reference ( "," properties+=Reference)* '}' )?
//        ('formalGates' '{' formalGates+=Gate ( "," formalGates+=Gate)* '}' )?
//    '}';
//
//Lifeline returns Lifeline:
//    'Lifeline'
//    '{'
//        'represents' represents=[TypedElement|EString]
//        'coveredBy' '(' coveredBy+=[InteractionFragment|EString] ( "," coveredBy+=[InteractionFragment|EString])* ')' 
//        ('localProperties' '{' localProperties+=TemporaryProperty ( "," localProperties+=TemporaryProperty)* '}' )?
//    '}';

//Message returns Message:
//    'Message'
//    '{'
//        'messageSort' messageSort=MessageSort
//        'sendEvent' sendEvent=[MessageEnd|EString]
//        'receiveEvent' receiveEvent=[MessageEnd|EString]
//        'signature' signature=[Operation|EString]
//        ('assignTo' assignTo=[StructuralFeature|EString])?
//        ('arguments' '{' arguments+=ParameterValueMapping ( "," arguments+=ParameterValueMapping)* '}' )?
//        ('returns' ^returns=ValueSpecification)?
//    '}';   
//
//Reference returns Reference:
//    static?='static'
//    'Reference'
//    name=EString
//    '{'
//        ('lowerBound' lowerBound=EInt)?
//        ('upperBound' upperBound=EInt)?
//        ('referenceType' referenceType=ReferenceType)?
//        'type' type=[ObjectType|EString]
//    '}';
//
//Gate returns Gate:
//    'Gate'
//    name=EString
//    '{'
//        'message' message=[Message|EString]
//    '}';
//
//MessageOccurrenceSpecification_Impl returns MessageOccurrenceSpecification:
//    'MessageOccurrenceSpecification'
//    '{'
//        'covered' '(' covered+=[Lifeline|EString] ( "," covered+=[Lifeline|EString])* ')' 
//        'message' message=[Message|EString]
//    '}';
//
//OccurrenceSpecification_Impl returns OccurrenceSpecification:
//    'OccurrenceSpecification'
//    '{'
//        'covered' '(' covered+=[Lifeline|EString] ( "," covered+=[Lifeline|EString])* ')' 
//    '}';
//
//DestructionOccurrenceSpecification returns DestructionOccurrenceSpecification:
//    'DestructionOccurrenceSpecification'
//    '{'
//        'covered' '(' covered+=[Lifeline|EString] ( "," covered+=[Lifeline|EString])* ')' 
//        'message' message=[Message|EString]
//    '}';
//
//CombinedFragment returns CombinedFragment:
//    'CombinedFragment'
//    '{'
//        'interactionOperator' interactionOperator=InteractionOperatorKind
//        'covered' '(' covered+=[Lifeline|EString] ( "," covered+=[Lifeline|EString])* ')' 
//        'operands' '{' operands+=InteractionOperand ( "," operands+=InteractionOperand)* '}' 
//    '}';
//
//OriginalBehaviorExecution returns OriginalBehaviorExecution:
//    'OriginalBehaviorExecution'
//    '{'
//        'covered' '(' covered+=[Lifeline|EString] ( "," covered+=[Lifeline|EString])* ')' 
//    '}';
//
//ExecutionStatement returns ExecutionStatement:
//    'ExecutionStatement'
//    '{'
//        'covered' '(' covered+=[Lifeline|EString] ( "," covered+=[Lifeline|EString])* ')' 
//        'specification' specification=ValueSpecification
//    '}';
//
//InteractionFragment returns InteractionFragment:
//	MessageOccurrenceSpecification_Impl | OccurrenceSpecification_Impl | DestructionOccurrenceSpecification | CombinedFragment | OriginalBehaviorExecution | ExecutionStatement;
//
//TemporaryProperty returns TemporaryProperty:
//    TAttribute | Reference;
//        
//MessageSort returns MessageSort:
//    'MessageSort' /* TODO: implement this rule and an appropriate IValueConverter */;
//    
//InteractionOperatorKind returns InteractionOperatorKind:
//        'InteractionOperatorKind' /* TODO: implement this rule and an appropriate IValueConverter */;
//
//InteractionOperand returns InteractionOperand:
//    'InteractionOperand'
//    '{'
//        'fragments' '{' fragments+=InteractionFragment ( "," fragments+=InteractionFragment)* '}' 
//        ('interactionConstraint' interactionConstraint=ValueSpecification)?
//    '}';
//
//

//
//
//    