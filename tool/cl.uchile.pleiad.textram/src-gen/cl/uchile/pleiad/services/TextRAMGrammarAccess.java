/*
* generated by Xtext
*/
package cl.uchile.pleiad.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class TextRAMGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class AspectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Aspect");
		private final RuleCall cTAspectParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//Aspect:
		//	TAspect;
		public ParserRule getRule() { return rule; }

		//TAspect
		public RuleCall getTAspectParserRuleCall() { return cTAspectParserRuleCall; }
	}

	public class TAspectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TAspect");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAspectKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cHeaderInstantiationsAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cHeaderInstantiationsTInstantiationHeaderParserRuleCall_2_0_0 = (RuleCall)cHeaderInstantiationsAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cHeaderInstantiationsAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cHeaderInstantiationsTInstantiationHeaderParserRuleCall_2_1_1_0 = (RuleCall)cHeaderInstantiationsAssignment_2_1_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cStructuralViewAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cStructuralViewTStructuralViewParserRuleCall_4_0 = (RuleCall)cStructuralViewAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cInstantiationsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cInstantiationsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cInstantiationsInstantiationParserRuleCall_5_2_0 = (RuleCall)cInstantiationsAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cSemicolonKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cInstantiationsAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cInstantiationsInstantiationParserRuleCall_5_3_1_0 = (RuleCall)cInstantiationsAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cMessagesKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cMessageViewsAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cMessageViewsTAbstractMessageViewParserRuleCall_6_2_0 = (RuleCall)cMessageViewsAssignment_6_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//TAspect returns textRam::TAspect:
		//	"aspect" name=EString (headerInstantiations+=TInstantiationHeader (","? headerInstantiations+=TInstantiationHeader)*)?
		//	"{" structuralView=TStructuralView ("instantiations" "{" instantiations+=Instantiation (";"?
		//	instantiations+=Instantiation)* "}")? ("messages" "{" messageViews+=TAbstractMessageView "}")? "}";
		public ParserRule getRule() { return rule; }

		//"aspect" name=EString (headerInstantiations+=TInstantiationHeader (","? headerInstantiations+=TInstantiationHeader)*)?
		//"{" structuralView=TStructuralView ("instantiations" "{" instantiations+=Instantiation (";"?
		//instantiations+=Instantiation)* "}")? ("messages" "{" messageViews+=TAbstractMessageView "}")? "}"
		public Group getGroup() { return cGroup; }

		//"aspect"
		public Keyword getAspectKeyword_0() { return cAspectKeyword_0; }

		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }

		//(headerInstantiations+=TInstantiationHeader (","? headerInstantiations+=TInstantiationHeader)*)?
		public Group getGroup_2() { return cGroup_2; }

		//headerInstantiations+=TInstantiationHeader
		public Assignment getHeaderInstantiationsAssignment_2_0() { return cHeaderInstantiationsAssignment_2_0; }

		//TInstantiationHeader
		public RuleCall getHeaderInstantiationsTInstantiationHeaderParserRuleCall_2_0_0() { return cHeaderInstantiationsTInstantiationHeaderParserRuleCall_2_0_0; }

		//(","? headerInstantiations+=TInstantiationHeader)*
		public Group getGroup_2_1() { return cGroup_2_1; }

		//","?
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }

		//headerInstantiations+=TInstantiationHeader
		public Assignment getHeaderInstantiationsAssignment_2_1_1() { return cHeaderInstantiationsAssignment_2_1_1; }

		//TInstantiationHeader
		public RuleCall getHeaderInstantiationsTInstantiationHeaderParserRuleCall_2_1_1_0() { return cHeaderInstantiationsTInstantiationHeaderParserRuleCall_2_1_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//structuralView=TStructuralView
		public Assignment getStructuralViewAssignment_4() { return cStructuralViewAssignment_4; }

		//TStructuralView
		public RuleCall getStructuralViewTStructuralViewParserRuleCall_4_0() { return cStructuralViewTStructuralViewParserRuleCall_4_0; }

		//("instantiations" "{" instantiations+=Instantiation (";"? instantiations+=Instantiation)* "}")?
		public Group getGroup_5() { return cGroup_5; }

		//"instantiations"
		public Keyword getInstantiationsKeyword_5_0() { return cInstantiationsKeyword_5_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }

		//instantiations+=Instantiation
		public Assignment getInstantiationsAssignment_5_2() { return cInstantiationsAssignment_5_2; }

		//Instantiation
		public RuleCall getInstantiationsInstantiationParserRuleCall_5_2_0() { return cInstantiationsInstantiationParserRuleCall_5_2_0; }

		//(";"? instantiations+=Instantiation)*
		public Group getGroup_5_3() { return cGroup_5_3; }

		//";"?
		public Keyword getSemicolonKeyword_5_3_0() { return cSemicolonKeyword_5_3_0; }

		//instantiations+=Instantiation
		public Assignment getInstantiationsAssignment_5_3_1() { return cInstantiationsAssignment_5_3_1; }

		//Instantiation
		public RuleCall getInstantiationsInstantiationParserRuleCall_5_3_1_0() { return cInstantiationsInstantiationParserRuleCall_5_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }

		//("messages" "{" messageViews+=TAbstractMessageView "}")?
		public Group getGroup_6() { return cGroup_6; }

		//"messages"
		public Keyword getMessagesKeyword_6_0() { return cMessagesKeyword_6_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }

		//messageViews+=TAbstractMessageView
		public Assignment getMessageViewsAssignment_6_2() { return cMessageViewsAssignment_6_2; }

		//TAbstractMessageView
		public RuleCall getMessageViewsTAbstractMessageViewParserRuleCall_6_2_0() { return cMessageViewsTAbstractMessageViewParserRuleCall_6_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6_3() { return cRightCurlyBracketKeyword_6_3; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cTEMPLATETerminalRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//EString returns ecore::EString:
		//	STRING | ID | TEMPLATE;
		public ParserRule getRule() { return rule; }

		//STRING | ID | TEMPLATE
		public Alternatives getAlternatives() { return cAlternatives; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }

		//TEMPLATE
		public RuleCall getTEMPLATETerminalRuleCall_2() { return cTEMPLATETerminalRuleCall_2; }
	}

	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt returns ecore::EInt:
		//	"-"? INT;
		public ParserRule getRule() { return rule; }

		//"-"? INT
		public Group getGroup() { return cGroup; }

		//"-"?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}

	public class AbstractStructuralViewElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AbstractStructuralView");
		private final RuleCall cTStructuralViewParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//AbstractStructuralView returns StructuralView:
		//	TStructuralView;
		public ParserRule getRule() { return rule; }

		//TStructuralView
		public RuleCall getTStructuralViewParserRuleCall() { return cTStructuralViewParserRuleCall; }
	}

	public class TAbstractMessageViewElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TAbstractMessageView");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTAbstractMessageViewAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLifelinesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cLifelinesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLifelinesTLifelineParserRuleCall_3_0 = (RuleCall)cLifelinesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cSemicolonKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cLifelinesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cLifelinesTLifelineParserRuleCall_4_1_0 = (RuleCall)cLifelinesAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cMessagesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cMessagesTAbstractMessagesParserRuleCall_6_0 = (RuleCall)cMessagesAssignment_6.eContents().get(0);
		private final Assignment cMessagesAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cMessagesTAbstractMessagesParserRuleCall_7_0 = (RuleCall)cMessagesAssignment_7.eContents().get(0);
		
		//TAbstractMessageView returns AbstractMessageView:
		//	{textRam::TAbstractMessageView} "lifelines" "{" lifelines+=TLifeline (";"? lifelines+=TLifeline)* "}"
		//	messages+=TAbstractMessages messages+=TAbstractMessages*;
		public ParserRule getRule() { return rule; }

		//{textRam::TAbstractMessageView} "lifelines" "{" lifelines+=TLifeline (";"? lifelines+=TLifeline)* "}"
		//messages+=TAbstractMessages messages+=TAbstractMessages*
		public Group getGroup() { return cGroup; }

		//{textRam::TAbstractMessageView}
		public Action getTAbstractMessageViewAction_0() { return cTAbstractMessageViewAction_0; }

		//"lifelines"
		public Keyword getLifelinesKeyword_1() { return cLifelinesKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//lifelines+=TLifeline
		public Assignment getLifelinesAssignment_3() { return cLifelinesAssignment_3; }

		//TLifeline
		public RuleCall getLifelinesTLifelineParserRuleCall_3_0() { return cLifelinesTLifelineParserRuleCall_3_0; }

		//(";"? lifelines+=TLifeline)*
		public Group getGroup_4() { return cGroup_4; }

		//";"?
		public Keyword getSemicolonKeyword_4_0() { return cSemicolonKeyword_4_0; }

		//lifelines+=TLifeline
		public Assignment getLifelinesAssignment_4_1() { return cLifelinesAssignment_4_1; }

		//TLifeline
		public RuleCall getLifelinesTLifelineParserRuleCall_4_1_0() { return cLifelinesTLifelineParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }

		//messages+=TAbstractMessages
		public Assignment getMessagesAssignment_6() { return cMessagesAssignment_6; }

		//TAbstractMessages
		public RuleCall getMessagesTAbstractMessagesParserRuleCall_6_0() { return cMessagesTAbstractMessagesParserRuleCall_6_0; }

		//messages+=TAbstractMessages*
		public Assignment getMessagesAssignment_7() { return cMessagesAssignment_7; }

		//TAbstractMessages
		public RuleCall getMessagesTAbstractMessagesParserRuleCall_7_0() { return cMessagesTAbstractMessagesParserRuleCall_7_0; }
	}

	public class TStructuralViewElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TStructuralView");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTStructuralViewAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cStructureKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cClassesAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cClassesClassifierParserRuleCall_3_0_0 = (RuleCall)cClassesAssignment_3_0.eContents().get(0);
		private final Assignment cClassesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cClassesClassifierParserRuleCall_3_1_0 = (RuleCall)cClassesAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cAssociationsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cTAssociationsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cTAssociationsTAssociationParserRuleCall_4_2_0 = (RuleCall)cTAssociationsAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cSemicolonKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cTAssociationsAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cTAssociationsTAssociationParserRuleCall_4_3_1_0 = (RuleCall)cTAssociationsAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//TStructuralView returns textRam::TStructuralView:
		//	{textRam::TStructuralView} "structure" "{" (classes+=Classifier classes+=Classifier*)? ("associations" "{"
		//	tAssociations+=TAssociation (";"? tAssociations+=TAssociation)* "}")? "}";
		public ParserRule getRule() { return rule; }

		//{textRam::TStructuralView} "structure" "{" (classes+=Classifier classes+=Classifier*)? ("associations" "{"
		//tAssociations+=TAssociation (";"? tAssociations+=TAssociation)* "}")? "}"
		public Group getGroup() { return cGroup; }

		//{textRam::TStructuralView}
		public Action getTStructuralViewAction_0() { return cTStructuralViewAction_0; }

		//"structure"
		public Keyword getStructureKeyword_1() { return cStructureKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//(classes+=Classifier classes+=Classifier*)?
		public Group getGroup_3() { return cGroup_3; }

		//classes+=Classifier
		public Assignment getClassesAssignment_3_0() { return cClassesAssignment_3_0; }

		//Classifier
		public RuleCall getClassesClassifierParserRuleCall_3_0_0() { return cClassesClassifierParserRuleCall_3_0_0; }

		//classes+=Classifier*
		public Assignment getClassesAssignment_3_1() { return cClassesAssignment_3_1; }

		//Classifier
		public RuleCall getClassesClassifierParserRuleCall_3_1_0() { return cClassesClassifierParserRuleCall_3_1_0; }

		//("associations" "{" tAssociations+=TAssociation (";"? tAssociations+=TAssociation)* "}")?
		public Group getGroup_4() { return cGroup_4; }

		//"associations"
		public Keyword getAssociationsKeyword_4_0() { return cAssociationsKeyword_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }

		//tAssociations+=TAssociation
		public Assignment getTAssociationsAssignment_4_2() { return cTAssociationsAssignment_4_2; }

		//TAssociation
		public RuleCall getTAssociationsTAssociationParserRuleCall_4_2_0() { return cTAssociationsTAssociationParserRuleCall_4_2_0; }

		//(";"? tAssociations+=TAssociation)*
		public Group getGroup_4_3() { return cGroup_4_3; }

		//";"?
		public Keyword getSemicolonKeyword_4_3_0() { return cSemicolonKeyword_4_3_0; }

		//tAssociations+=TAssociation
		public Assignment getTAssociationsAssignment_4_3_1() { return cTAssociationsAssignment_4_3_1; }

		//TAssociation
		public RuleCall getTAssociationsTAssociationParserRuleCall_4_3_1_0() { return cTAssociationsTAssociationParserRuleCall_4_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class ClassifierElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Classifier");
		private final RuleCall cTClassParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//Classifier:
		//	TClass;
		public ParserRule getRule() { return rule; }

		//TClass
		public RuleCall getTClassParserRuleCall() { return cTClassParserRuleCall; }
	}

	public class TypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Type");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTClassParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRVoidParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRBooleanParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cRIntParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cRCharParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cRStringParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cRAnyParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cRDoubleParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cRFloatParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cRSetParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		
		//Type:
		//	TClass | RVoid | RBoolean | RInt | RChar | RString | RAny | RDouble | RFloat | RSet;
		public ParserRule getRule() { return rule; }

		//TClass | RVoid | RBoolean | RInt | RChar | RString | RAny | RDouble | RFloat | RSet
		public Alternatives getAlternatives() { return cAlternatives; }

		//TClass
		public RuleCall getTClassParserRuleCall_0() { return cTClassParserRuleCall_0; }

		//RVoid
		public RuleCall getRVoidParserRuleCall_1() { return cRVoidParserRuleCall_1; }

		//RBoolean
		public RuleCall getRBooleanParserRuleCall_2() { return cRBooleanParserRuleCall_2; }

		//RInt
		public RuleCall getRIntParserRuleCall_3() { return cRIntParserRuleCall_3; }

		//RChar
		public RuleCall getRCharParserRuleCall_4() { return cRCharParserRuleCall_4; }

		//RString
		public RuleCall getRStringParserRuleCall_5() { return cRStringParserRuleCall_5; }

		//RAny
		public RuleCall getRAnyParserRuleCall_6() { return cRAnyParserRuleCall_6; }

		//RDouble
		public RuleCall getRDoubleParserRuleCall_7() { return cRDoubleParserRuleCall_7; }

		//RFloat
		public RuleCall getRFloatParserRuleCall_8() { return cRFloatParserRuleCall_8; }

		//RSet
		public RuleCall getRSetParserRuleCall_9() { return cRSetParserRuleCall_9; }
	}

	public class ObjectTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ObjectType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTClassParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRBooleanParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRIntParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cRCharParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cRStringParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cRDoubleParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cRFloatParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cRSetParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		
		//ObjectType:
		//	TClass | RBoolean | RInt | RChar | RString | RDouble | RFloat | RSet;
		public ParserRule getRule() { return rule; }

		//TClass | RBoolean | RInt | RChar | RString | RDouble | RFloat | RSet
		public Alternatives getAlternatives() { return cAlternatives; }

		//TClass
		public RuleCall getTClassParserRuleCall_0() { return cTClassParserRuleCall_0; }

		//RBoolean
		public RuleCall getRBooleanParserRuleCall_1() { return cRBooleanParserRuleCall_1; }

		//RInt
		public RuleCall getRIntParserRuleCall_2() { return cRIntParserRuleCall_2; }

		//RChar
		public RuleCall getRCharParserRuleCall_3() { return cRCharParserRuleCall_3; }

		//RString
		public RuleCall getRStringParserRuleCall_4() { return cRStringParserRuleCall_4; }

		//RDouble
		public RuleCall getRDoubleParserRuleCall_5() { return cRDoubleParserRuleCall_5; }

		//RFloat
		public RuleCall getRFloatParserRuleCall_6() { return cRFloatParserRuleCall_6; }

		//RSet
		public RuleCall getRSetParserRuleCall_7() { return cRSetParserRuleCall_7; }
	}

	public class PrimitiveTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PrimitiveType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRBooleanParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRIntParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRCharParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cRStringParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cRDoubleParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cRFloatParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//// | REnum;
		//PrimitiveType:
		//	RBoolean | RInt | RChar | RString | RDouble | RFloat;
		public ParserRule getRule() { return rule; }

		//RBoolean | RInt | RChar | RString | RDouble | RFloat
		public Alternatives getAlternatives() { return cAlternatives; }

		//RBoolean
		public RuleCall getRBooleanParserRuleCall_0() { return cRBooleanParserRuleCall_0; }

		//RInt
		public RuleCall getRIntParserRuleCall_1() { return cRIntParserRuleCall_1; }

		//RChar
		public RuleCall getRCharParserRuleCall_2() { return cRCharParserRuleCall_2; }

		//RString
		public RuleCall getRStringParserRuleCall_3() { return cRStringParserRuleCall_3; }

		//RDouble
		public RuleCall getRDoubleParserRuleCall_4() { return cRDoubleParserRuleCall_4; }

		//RFloat
		public RuleCall getRFloatParserRuleCall_5() { return cRFloatParserRuleCall_5; }
	}

	public class RStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RString");
		private final Action cRStringAction = (Action)rule.eContents().get(1);
		
		//RString:
		//	{RString};
		public ParserRule getRule() { return rule; }

		//{RString}
		public Action getRStringAction() { return cRStringAction; }
	}

	public class RFloatElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RFloat");
		private final Action cRFloatAction = (Action)rule.eContents().get(1);
		
		//RFloat:
		//	{RFloat};
		public ParserRule getRule() { return rule; }

		//{RFloat}
		public Action getRFloatAction() { return cRFloatAction; }
	}

	public class RDoubleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RDouble");
		private final Action cRDoubleAction = (Action)rule.eContents().get(1);
		
		//RDouble:
		//	{RDouble};
		public ParserRule getRule() { return rule; }

		//{RDouble}
		public Action getRDoubleAction() { return cRDoubleAction; }
	}

	public class RAnyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RAny");
		private final Action cRAnyAction = (Action)rule.eContents().get(1);
		
		//RAny:
		//	{RAny};
		public ParserRule getRule() { return rule; }

		//{RAny}
		public Action getRAnyAction() { return cRAnyAction; }
	}

	public class RCharElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RChar");
		private final Action cRCharAction = (Action)rule.eContents().get(1);
		
		//RChar:
		//	{RChar};
		public ParserRule getRule() { return rule; }

		//{RChar}
		public Action getRCharAction() { return cRCharAction; }
	}

	public class RIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RInt");
		private final Action cRIntAction = (Action)rule.eContents().get(1);
		
		//RInt:
		//	{RInt};
		public ParserRule getRule() { return rule; }

		//{RInt}
		public Action getRIntAction() { return cRIntAction; }
	}

	public class RBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RBoolean");
		private final Action cRBooleanAction = (Action)rule.eContents().get(1);
		
		//RBoolean:
		//	{RBoolean};
		public ParserRule getRule() { return rule; }

		//{RBoolean}
		public Action getRBooleanAction() { return cRBooleanAction; }
	}

	public class RVoidElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RVoid");
		private final Action cRVoidAction = (Action)rule.eContents().get(1);
		
		//RVoid:
		//	{RVoid};
		public ParserRule getRule() { return rule; }

		//{RVoid}
		public Action getRVoidAction() { return cRVoidAction; }
	}

	public class RSetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RSet");
		private final Action cRSetAction = (Action)rule.eContents().get(1);
		
		//RSet:
		//	{RSet};
		public ParserRule getRule() { return rule; }

		//{RSet}
		public Action getRSetAction() { return cRSetAction; }
	}

	public class AbstractClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AbstractClass");
		private final RuleCall cTClassParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//AbstractClass returns Class:
		//	TClass;
		public ParserRule getRule() { return rule; }

		//TClass
		public RuleCall getTClassParserRuleCall() { return cTClassParserRuleCall; }
	}

	public class TClassMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TClassMember");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTAttributeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTOperationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//TClassMember returns textRam::TClassMember:
		//	TAttribute | TOperation;
		public ParserRule getRule() { return rule; }

		//TAttribute | TOperation
		public Alternatives getAlternatives() { return cAlternatives; }

		//TAttribute
		public RuleCall getTAttributeParserRuleCall_0() { return cTAttributeParserRuleCall_0; }

		//TOperation
		public RuleCall getTOperationParserRuleCall_1() { return cTOperationParserRuleCall_1; }
	}

	public class TClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTClassAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cAbstractAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cAbstractAbstractKeyword_1_0 = (Keyword)cAbstractAssignment_1.eContents().get(0);
		private final Keyword cClassKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPartialAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cPartialVerticalLineKeyword_3_0 = (Keyword)cPartialAssignment_3.eContents().get(0);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameEStringParserRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cPartialSuperTypeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final Keyword cPartialSuperTypeVerticalLineKeyword_5_1_0 = (Keyword)cPartialSuperTypeAssignment_5_1.eContents().get(0);
		private final Assignment cSuperTypesAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final CrossReference cSuperTypesClassifierCrossReference_5_2_0 = (CrossReference)cSuperTypesAssignment_5_2.eContents().get(0);
		private final RuleCall cSuperTypesClassifierEStringParserRuleCall_5_2_0_1 = (RuleCall)cSuperTypesClassifierCrossReference_5_2_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Assignment cMembersAssignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final RuleCall cMembersTClassMemberParserRuleCall_7_0_0 = (RuleCall)cMembersAssignment_7_0.eContents().get(0);
		private final Group cGroup_7_1 = (Group)cGroup_7.eContents().get(1);
		private final Keyword cSemicolonKeyword_7_1_0 = (Keyword)cGroup_7_1.eContents().get(0);
		private final Assignment cMembersAssignment_7_1_1 = (Assignment)cGroup_7_1.eContents().get(1);
		private final RuleCall cMembersTClassMemberParserRuleCall_7_1_1_0 = (RuleCall)cMembersAssignment_7_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//TClass returns textRam::TClass:
		//	{textRam::TClass} abstract?="abstract"? "class" partial?="|"? name=EString (":" partialSuperType?="|"?
		//	superTypes+=[Classifier|EString])? "{" (members+=TClassMember (";"? members+=TClassMember)*)? "}";
		public ParserRule getRule() { return rule; }

		//{textRam::TClass} abstract?="abstract"? "class" partial?="|"? name=EString (":" partialSuperType?="|"?
		//superTypes+=[Classifier|EString])? "{" (members+=TClassMember (";"? members+=TClassMember)*)? "}"
		public Group getGroup() { return cGroup; }

		//{textRam::TClass}
		public Action getTClassAction_0() { return cTClassAction_0; }

		//abstract?="abstract"?
		public Assignment getAbstractAssignment_1() { return cAbstractAssignment_1; }

		//"abstract"
		public Keyword getAbstractAbstractKeyword_1_0() { return cAbstractAbstractKeyword_1_0; }

		//"class"
		public Keyword getClassKeyword_2() { return cClassKeyword_2; }

		//partial?="|"?
		public Assignment getPartialAssignment_3() { return cPartialAssignment_3; }

		//"|"
		public Keyword getPartialVerticalLineKeyword_3_0() { return cPartialVerticalLineKeyword_3_0; }

		//name=EString
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//EString
		public RuleCall getNameEStringParserRuleCall_4_0() { return cNameEStringParserRuleCall_4_0; }

		//(":" partialSuperType?="|"? superTypes+=[Classifier|EString])?
		public Group getGroup_5() { return cGroup_5; }

		//":"
		public Keyword getColonKeyword_5_0() { return cColonKeyword_5_0; }

		//partialSuperType?="|"?
		public Assignment getPartialSuperTypeAssignment_5_1() { return cPartialSuperTypeAssignment_5_1; }

		//"|"
		public Keyword getPartialSuperTypeVerticalLineKeyword_5_1_0() { return cPartialSuperTypeVerticalLineKeyword_5_1_0; }

		//superTypes+=[Classifier|EString]
		public Assignment getSuperTypesAssignment_5_2() { return cSuperTypesAssignment_5_2; }

		//[Classifier|EString]
		public CrossReference getSuperTypesClassifierCrossReference_5_2_0() { return cSuperTypesClassifierCrossReference_5_2_0; }

		//EString
		public RuleCall getSuperTypesClassifierEStringParserRuleCall_5_2_0_1() { return cSuperTypesClassifierEStringParserRuleCall_5_2_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }

		//(members+=TClassMember (";"? members+=TClassMember)*)?
		public Group getGroup_7() { return cGroup_7; }

		//members+=TClassMember
		public Assignment getMembersAssignment_7_0() { return cMembersAssignment_7_0; }

		//TClassMember
		public RuleCall getMembersTClassMemberParserRuleCall_7_0_0() { return cMembersTClassMemberParserRuleCall_7_0_0; }

		//(";"? members+=TClassMember)*
		public Group getGroup_7_1() { return cGroup_7_1; }

		//";"?
		public Keyword getSemicolonKeyword_7_1_0() { return cSemicolonKeyword_7_1_0; }

		//members+=TClassMember
		public Assignment getMembersAssignment_7_1_1() { return cMembersAssignment_7_1_1; }

		//TClassMember
		public RuleCall getMembersTClassMemberParserRuleCall_7_1_1_0() { return cMembersTClassMemberParserRuleCall_7_1_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class TAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cStaticAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cStaticStaticKeyword_0_0 = (Keyword)cStaticAssignment_0.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cTypePrimitiveTypeCrossReference_1_0 = (CrossReference)cTypeAssignment_1.eContents().get(0);
		private final RuleCall cTypePrimitiveTypeEStringParserRuleCall_1_0_1 = (RuleCall)cTypePrimitiveTypeCrossReference_1_0.eContents().get(1);
		private final Assignment cPartialAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cPartialVerticalLineKeyword_2_0 = (Keyword)cPartialAssignment_2.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		
		//TAttribute returns textRam::TAttribute:
		//	static?="static"? type=[PrimitiveType|EString] partial?="|"? name=EString;
		public ParserRule getRule() { return rule; }

		//static?="static"? type=[PrimitiveType|EString] partial?="|"? name=EString
		public Group getGroup() { return cGroup; }

		//static?="static"?
		public Assignment getStaticAssignment_0() { return cStaticAssignment_0; }

		//"static"
		public Keyword getStaticStaticKeyword_0_0() { return cStaticStaticKeyword_0_0; }

		//type=[PrimitiveType|EString]
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//[PrimitiveType|EString]
		public CrossReference getTypePrimitiveTypeCrossReference_1_0() { return cTypePrimitiveTypeCrossReference_1_0; }

		//EString
		public RuleCall getTypePrimitiveTypeEStringParserRuleCall_1_0_1() { return cTypePrimitiveTypeEStringParserRuleCall_1_0_1; }

		//partial?="|"?
		public Assignment getPartialAssignment_2() { return cPartialAssignment_2; }

		//"|"
		public Keyword getPartialVerticalLineKeyword_2_0() { return cPartialVerticalLineKeyword_2_0; }

		//name=EString
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
	}

	public class TOperationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TOperation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTOperationAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cAbstractAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cAbstractAbstractKeyword_1_0 = (Keyword)cAbstractAssignment_1.eContents().get(0);
		private final Assignment cStaticAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cStaticStaticKeyword_2_0 = (Keyword)cStaticAssignment_2.eContents().get(0);
		private final Assignment cVisibilityAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cVisibilityVisibilityEnumRuleCall_3_0 = (RuleCall)cVisibilityAssignment_3.eContents().get(0);
		private final Assignment cPartialReturnTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Keyword cPartialReturnTypeVerticalLineKeyword_4_0 = (Keyword)cPartialReturnTypeAssignment_4.eContents().get(0);
		private final Assignment cReturnTypeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cReturnTypeTypeCrossReference_5_0 = (CrossReference)cReturnTypeAssignment_5.eContents().get(0);
		private final RuleCall cReturnTypeTypeEStringParserRuleCall_5_0_1 = (RuleCall)cReturnTypeTypeCrossReference_5_0.eContents().get(1);
		private final Assignment cPartialAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final Keyword cPartialVerticalLineKeyword_6_0 = (Keyword)cPartialAssignment_6.eContents().get(0);
		private final Assignment cNameAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cNameEStringParserRuleCall_7_0 = (RuleCall)cNameAssignment_7.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Assignment cParametersAssignment_9_0 = (Assignment)cGroup_9.eContents().get(0);
		private final RuleCall cParametersTParameterParserRuleCall_9_0_0 = (RuleCall)cParametersAssignment_9_0.eContents().get(0);
		private final Group cGroup_9_1 = (Group)cGroup_9.eContents().get(1);
		private final Keyword cCommaKeyword_9_1_0 = (Keyword)cGroup_9_1.eContents().get(0);
		private final Assignment cParametersAssignment_9_1_1 = (Assignment)cGroup_9_1.eContents().get(1);
		private final RuleCall cParametersTParameterParserRuleCall_9_1_1_0 = (RuleCall)cParametersAssignment_9_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//TOperation returns textRam::TOperation:
		//	{textRam::TOperation} abstract?="abstract"? static?="static"? visibility=Visibility partialReturnType?="|"?
		//	returnType=[Type|EString] partial?="|"? name=EString "(" (parameters+=TParameter ("," parameters+=TParameter)*)? ")";
		public ParserRule getRule() { return rule; }

		//{textRam::TOperation} abstract?="abstract"? static?="static"? visibility=Visibility partialReturnType?="|"?
		//returnType=[Type|EString] partial?="|"? name=EString "(" (parameters+=TParameter ("," parameters+=TParameter)*)? ")"
		public Group getGroup() { return cGroup; }

		//{textRam::TOperation}
		public Action getTOperationAction_0() { return cTOperationAction_0; }

		//abstract?="abstract"?
		public Assignment getAbstractAssignment_1() { return cAbstractAssignment_1; }

		//"abstract"
		public Keyword getAbstractAbstractKeyword_1_0() { return cAbstractAbstractKeyword_1_0; }

		//static?="static"?
		public Assignment getStaticAssignment_2() { return cStaticAssignment_2; }

		//"static"
		public Keyword getStaticStaticKeyword_2_0() { return cStaticStaticKeyword_2_0; }

		//visibility=Visibility
		public Assignment getVisibilityAssignment_3() { return cVisibilityAssignment_3; }

		//Visibility
		public RuleCall getVisibilityVisibilityEnumRuleCall_3_0() { return cVisibilityVisibilityEnumRuleCall_3_0; }

		//partialReturnType?="|"?
		public Assignment getPartialReturnTypeAssignment_4() { return cPartialReturnTypeAssignment_4; }

		//"|"
		public Keyword getPartialReturnTypeVerticalLineKeyword_4_0() { return cPartialReturnTypeVerticalLineKeyword_4_0; }

		//returnType=[Type|EString]
		public Assignment getReturnTypeAssignment_5() { return cReturnTypeAssignment_5; }

		//[Type|EString]
		public CrossReference getReturnTypeTypeCrossReference_5_0() { return cReturnTypeTypeCrossReference_5_0; }

		//EString
		public RuleCall getReturnTypeTypeEStringParserRuleCall_5_0_1() { return cReturnTypeTypeEStringParserRuleCall_5_0_1; }

		//partial?="|"?
		public Assignment getPartialAssignment_6() { return cPartialAssignment_6; }

		//"|"
		public Keyword getPartialVerticalLineKeyword_6_0() { return cPartialVerticalLineKeyword_6_0; }

		//name=EString
		public Assignment getNameAssignment_7() { return cNameAssignment_7; }

		//EString
		public RuleCall getNameEStringParserRuleCall_7_0() { return cNameEStringParserRuleCall_7_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_8() { return cLeftParenthesisKeyword_8; }

		//(parameters+=TParameter ("," parameters+=TParameter)*)?
		public Group getGroup_9() { return cGroup_9; }

		//parameters+=TParameter
		public Assignment getParametersAssignment_9_0() { return cParametersAssignment_9_0; }

		//TParameter
		public RuleCall getParametersTParameterParserRuleCall_9_0_0() { return cParametersTParameterParserRuleCall_9_0_0; }

		//("," parameters+=TParameter)*
		public Group getGroup_9_1() { return cGroup_9_1; }

		//","
		public Keyword getCommaKeyword_9_1_0() { return cCommaKeyword_9_1_0; }

		//parameters+=TParameter
		public Assignment getParametersAssignment_9_1_1() { return cParametersAssignment_9_1_1; }

		//TParameter
		public RuleCall getParametersTParameterParserRuleCall_9_1_1_0() { return cParametersTParameterParserRuleCall_9_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_10() { return cRightParenthesisKeyword_10; }
	}

	public class TParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TParameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPartialTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPartialTypeVerticalLineKeyword_0_0 = (Keyword)cPartialTypeAssignment_0.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cTypeTypeCrossReference_1_0 = (CrossReference)cTypeAssignment_1.eContents().get(0);
		private final RuleCall cTypeTypeEStringParserRuleCall_1_0_1 = (RuleCall)cTypeTypeCrossReference_1_0.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//TParameter returns textRam::TParameter:
		//	partialType?="|"? type=[Type|EString] name=EString;
		public ParserRule getRule() { return rule; }

		//partialType?="|"? type=[Type|EString] name=EString
		public Group getGroup() { return cGroup; }

		//partialType?="|"?
		public Assignment getPartialTypeAssignment_0() { return cPartialTypeAssignment_0; }

		//"|"
		public Keyword getPartialTypeVerticalLineKeyword_0_0() { return cPartialTypeVerticalLineKeyword_0_0; }

		//type=[Type|EString]
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//[Type|EString]
		public CrossReference getTypeTypeCrossReference_1_0() { return cTypeTypeCrossReference_1_0; }

		//EString
		public RuleCall getTypeTypeEStringParserRuleCall_1_0_1() { return cTypeTypeEStringParserRuleCall_1_0_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
	}

	public class TAssociationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TAssociation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTAssociationAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cFromEndAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFromEndTAssociationEndParserRuleCall_1_0 = (RuleCall)cFromEndAssignment_1.eContents().get(0);
		private final Assignment cReferenceTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cReferenceTypeReferenceTypeEnumRuleCall_2_0 = (RuleCall)cReferenceTypeAssignment_2.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cToEndAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cToEndTAssociationEndParserRuleCall_4_0 = (RuleCall)cToEndAssignment_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cNameAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cNameEStringParserRuleCall_6_0 = (RuleCall)cNameAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//TAssociation returns textRam::TAssociation:
		//	{textRam::TAssociation} fromEnd=TAssociationEnd referenceType=ReferenceType? "->" toEnd=TAssociationEnd "{"
		//	name=EString "}";
		public ParserRule getRule() { return rule; }

		//{textRam::TAssociation} fromEnd=TAssociationEnd referenceType=ReferenceType? "->" toEnd=TAssociationEnd "{" name=EString
		//"}"
		public Group getGroup() { return cGroup; }

		//{textRam::TAssociation}
		public Action getTAssociationAction_0() { return cTAssociationAction_0; }

		//fromEnd=TAssociationEnd
		public Assignment getFromEndAssignment_1() { return cFromEndAssignment_1; }

		//TAssociationEnd
		public RuleCall getFromEndTAssociationEndParserRuleCall_1_0() { return cFromEndTAssociationEndParserRuleCall_1_0; }

		//referenceType=ReferenceType?
		public Assignment getReferenceTypeAssignment_2() { return cReferenceTypeAssignment_2; }

		//ReferenceType
		public RuleCall getReferenceTypeReferenceTypeEnumRuleCall_2_0() { return cReferenceTypeReferenceTypeEnumRuleCall_2_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_3() { return cHyphenMinusGreaterThanSignKeyword_3; }

		//toEnd=TAssociationEnd
		public Assignment getToEndAssignment_4() { return cToEndAssignment_4; }

		//TAssociationEnd
		public RuleCall getToEndTAssociationEndParserRuleCall_4_0() { return cToEndTAssociationEndParserRuleCall_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//name=EString
		public Assignment getNameAssignment_6() { return cNameAssignment_6; }

		//EString
		public RuleCall getNameEStringParserRuleCall_6_0() { return cNameEStringParserRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class TAssociationEndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TAssociationEnd");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTAssociationEndAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cLowerBoundAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cLowerBoundElementBoundParserRuleCall_1_0_0 = (RuleCall)cLowerBoundAssignment_1_0.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cUpperBoundAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cUpperBoundElementBoundParserRuleCall_2_0 = (RuleCall)cUpperBoundAssignment_2.eContents().get(0);
		private final Assignment cClassReferenceAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cClassReferenceClassCrossReference_3_0 = (CrossReference)cClassReferenceAssignment_3.eContents().get(0);
		private final RuleCall cClassReferenceClassEStringParserRuleCall_3_0_1 = (RuleCall)cClassReferenceClassCrossReference_3_0.eContents().get(1);
		
		//TAssociationEnd returns textRam::TAssociationEnd:
		//	{textRam::TAssociationEnd} (lowerBound=ElementBound "..")? upperBound=ElementBound? classReference=[Class|EString];
		public ParserRule getRule() { return rule; }

		//{textRam::TAssociationEnd} (lowerBound=ElementBound "..")? upperBound=ElementBound? classReference=[Class|EString]
		public Group getGroup() { return cGroup; }

		//{textRam::TAssociationEnd}
		public Action getTAssociationEndAction_0() { return cTAssociationEndAction_0; }

		//(lowerBound=ElementBound "..")?
		public Group getGroup_1() { return cGroup_1; }

		//lowerBound=ElementBound
		public Assignment getLowerBoundAssignment_1_0() { return cLowerBoundAssignment_1_0; }

		//ElementBound
		public RuleCall getLowerBoundElementBoundParserRuleCall_1_0_0() { return cLowerBoundElementBoundParserRuleCall_1_0_0; }

		//".."
		public Keyword getFullStopFullStopKeyword_1_1() { return cFullStopFullStopKeyword_1_1; }

		//upperBound=ElementBound?
		public Assignment getUpperBoundAssignment_2() { return cUpperBoundAssignment_2; }

		//ElementBound
		public RuleCall getUpperBoundElementBoundParserRuleCall_2_0() { return cUpperBoundElementBoundParserRuleCall_2_0; }

		//classReference=[Class|EString]
		public Assignment getClassReferenceAssignment_3() { return cClassReferenceAssignment_3; }

		//[Class|EString]
		public CrossReference getClassReferenceClassCrossReference_3_0() { return cClassReferenceClassCrossReference_3_0; }

		//EString
		public RuleCall getClassReferenceClassEStringParserRuleCall_3_0_1() { return cClassReferenceClassEStringParserRuleCall_3_0_1; }
	}

	public class ElementBoundElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ElementBound");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cAsteriskKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ElementBound returns ecore::EInt:
		//	"*" | INT;
		public ParserRule getRule() { return rule; }

		//"*" | INT
		public Alternatives getAlternatives() { return cAlternatives; }

		//"*"
		public Keyword getAsteriskKeyword_0() { return cAsteriskKeyword_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}

	public class TInstantiationHeaderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TInstantiationHeader");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeInstantiationTypeEnumRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Assignment cExternalAspectsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cExternalAspectsAspectCrossReference_1_0 = (CrossReference)cExternalAspectsAssignment_1.eContents().get(0);
		private final RuleCall cExternalAspectsAspectEStringParserRuleCall_1_0_1 = (RuleCall)cExternalAspectsAspectCrossReference_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cExternalAspectsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cExternalAspectsAspectCrossReference_2_1_0 = (CrossReference)cExternalAspectsAssignment_2_1.eContents().get(0);
		private final RuleCall cExternalAspectsAspectEStringParserRuleCall_2_1_0_1 = (RuleCall)cExternalAspectsAspectCrossReference_2_1_0.eContents().get(1);
		
		//TInstantiationHeader returns textRam::TInstantiationHeader:
		//	type=InstantiationType externalAspects+=[Aspect|EString] ("," externalAspects+=[Aspect|EString])*;
		public ParserRule getRule() { return rule; }

		//type=InstantiationType externalAspects+=[Aspect|EString] ("," externalAspects+=[Aspect|EString])*
		public Group getGroup() { return cGroup; }

		//type=InstantiationType
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//InstantiationType
		public RuleCall getTypeInstantiationTypeEnumRuleCall_0_0() { return cTypeInstantiationTypeEnumRuleCall_0_0; }

		//externalAspects+=[Aspect|EString]
		public Assignment getExternalAspectsAssignment_1() { return cExternalAspectsAssignment_1; }

		//[Aspect|EString]
		public CrossReference getExternalAspectsAspectCrossReference_1_0() { return cExternalAspectsAspectCrossReference_1_0; }

		//EString
		public RuleCall getExternalAspectsAspectEStringParserRuleCall_1_0_1() { return cExternalAspectsAspectEStringParserRuleCall_1_0_1; }

		//("," externalAspects+=[Aspect|EString])*
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//externalAspects+=[Aspect|EString]
		public Assignment getExternalAspectsAssignment_2_1() { return cExternalAspectsAssignment_2_1; }

		//[Aspect|EString]
		public CrossReference getExternalAspectsAspectCrossReference_2_1_0() { return cExternalAspectsAspectCrossReference_2_1_0; }

		//EString
		public RuleCall getExternalAspectsAspectEStringParserRuleCall_2_1_0_1() { return cExternalAspectsAspectEStringParserRuleCall_2_1_0_1; }
	}

	public class InstantiationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Instantiation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cExternalAspectAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cExternalAspectAspectCrossReference_0_0 = (CrossReference)cExternalAspectAssignment_0.eContents().get(0);
		private final RuleCall cExternalAspectAspectEStringParserRuleCall_0_0_1 = (RuleCall)cExternalAspectAspectCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cMappingsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cMappingsTClassifierMappingParserRuleCall_1_1_0 = (RuleCall)cMappingsAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final Keyword cSemicolonKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cMappingsAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cMappingsTClassifierMappingParserRuleCall_1_2_1_0 = (RuleCall)cMappingsAssignment_1_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		
		//Instantiation:
		//	externalAspect=[Aspect|EString] ("{" mappings+=TClassifierMapping (";"? mappings+=TClassifierMapping)* "}")?;
		public ParserRule getRule() { return rule; }

		//externalAspect=[Aspect|EString] ("{" mappings+=TClassifierMapping (";"? mappings+=TClassifierMapping)* "}")?
		public Group getGroup() { return cGroup; }

		//externalAspect=[Aspect|EString]
		public Assignment getExternalAspectAssignment_0() { return cExternalAspectAssignment_0; }

		//[Aspect|EString]
		public CrossReference getExternalAspectAspectCrossReference_0_0() { return cExternalAspectAspectCrossReference_0_0; }

		//EString
		public RuleCall getExternalAspectAspectEStringParserRuleCall_0_0_1() { return cExternalAspectAspectEStringParserRuleCall_0_0_1; }

		//("{" mappings+=TClassifierMapping (";"? mappings+=TClassifierMapping)* "}")?
		public Group getGroup_1() { return cGroup_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }

		//mappings+=TClassifierMapping
		public Assignment getMappingsAssignment_1_1() { return cMappingsAssignment_1_1; }

		//TClassifierMapping
		public RuleCall getMappingsTClassifierMappingParserRuleCall_1_1_0() { return cMappingsTClassifierMappingParserRuleCall_1_1_0; }

		//(";"? mappings+=TClassifierMapping)*
		public Group getGroup_1_2() { return cGroup_1_2; }

		//";"?
		public Keyword getSemicolonKeyword_1_2_0() { return cSemicolonKeyword_1_2_0; }

		//mappings+=TClassifierMapping
		public Assignment getMappingsAssignment_1_2_1() { return cMappingsAssignment_1_2_1; }

		//TClassifierMapping
		public RuleCall getMappingsTClassifierMappingParserRuleCall_1_2_1_0() { return cMappingsTClassifierMappingParserRuleCall_1_2_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_1_3() { return cRightCurlyBracketKeyword_1_3; }
	}

	public class AbstractClassifierMappingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AbstractClassifierMapping");
		private final RuleCall cTClassifierMappingParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//AbstractClassifierMapping returns ClassifierMapping:
		//	TClassifierMapping;
		public ParserRule getRule() { return rule; }

		//TClassifierMapping
		public RuleCall getTClassifierMappingParserRuleCall() { return cTClassifierMappingParserRuleCall; }
	}

	public class TClassifierMappingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TClassifierMapping");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPartialFromElementAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPartialFromElementVerticalLineKeyword_0_0 = (Keyword)cPartialFromElementAssignment_0.eContents().get(0);
		private final Assignment cFromElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cFromElementClassifierCrossReference_1_0 = (CrossReference)cFromElementAssignment_1.eContents().get(0);
		private final RuleCall cFromElementClassifierEStringParserRuleCall_1_0_1 = (RuleCall)cFromElementClassifierCrossReference_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLessThanSignKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cFromMembersAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cFromMembersTClassMemberCrossReference_2_1_0 = (CrossReference)cFromMembersAssignment_2_1.eContents().get(0);
		private final RuleCall cFromMembersTClassMemberEStringParserRuleCall_2_1_0_1 = (RuleCall)cFromMembersTClassMemberCrossReference_2_1_0.eContents().get(1);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cFromMembersAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final CrossReference cFromMembersTClassMemberCrossReference_2_2_1_0 = (CrossReference)cFromMembersAssignment_2_2_1.eContents().get(0);
		private final RuleCall cFromMembersTClassMemberEStringParserRuleCall_2_2_1_0_1 = (RuleCall)cFromMembersTClassMemberCrossReference_2_2_1_0.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cPartialToElementAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Keyword cPartialToElementVerticalLineKeyword_4_0 = (Keyword)cPartialToElementAssignment_4.eContents().get(0);
		private final Assignment cToElementAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cToElementClassifierCrossReference_5_0 = (CrossReference)cToElementAssignment_5.eContents().get(0);
		private final RuleCall cToElementClassifierEStringParserRuleCall_5_0_1 = (RuleCall)cToElementClassifierCrossReference_5_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cLessThanSignKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cToMembersAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cToMembersTClassMemberCrossReference_6_1_0 = (CrossReference)cToMembersAssignment_6_1.eContents().get(0);
		private final RuleCall cToMembersTClassMemberEStringParserRuleCall_6_1_0_1 = (RuleCall)cToMembersTClassMemberCrossReference_6_1_0.eContents().get(1);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Keyword cCommaKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Assignment cToMembersAssignment_6_2_1 = (Assignment)cGroup_6_2.eContents().get(1);
		private final CrossReference cToMembersTClassMemberCrossReference_6_2_1_0 = (CrossReference)cToMembersAssignment_6_2_1.eContents().get(0);
		private final RuleCall cToMembersTClassMemberEStringParserRuleCall_6_2_1_0_1 = (RuleCall)cToMembersTClassMemberCrossReference_6_2_1_0.eContents().get(1);
		private final Keyword cGreaterThanSignKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		
		//TClassifierMapping returns textRam::TClassifierMapping:
		//	partialFromElement?="|"? fromElement=[Classifier|EString] ("<" fromMembers+=[textRam::TClassMember|EString] (","
		//	fromMembers+=[textRam::TClassMember|EString])* ">")? "->" partialToElement?="|"? toElement=[Classifier|EString] ("<"
		//	toMembers+=[textRam::TClassMember|EString] ("," toMembers+=[textRam::TClassMember|EString])* ">")?;
		public ParserRule getRule() { return rule; }

		//partialFromElement?="|"? fromElement=[Classifier|EString] ("<" fromMembers+=[textRam::TClassMember|EString] (","
		//fromMembers+=[textRam::TClassMember|EString])* ">")? "->" partialToElement?="|"? toElement=[Classifier|EString] ("<"
		//toMembers+=[textRam::TClassMember|EString] ("," toMembers+=[textRam::TClassMember|EString])* ">")?
		public Group getGroup() { return cGroup; }

		//partialFromElement?="|"?
		public Assignment getPartialFromElementAssignment_0() { return cPartialFromElementAssignment_0; }

		//"|"
		public Keyword getPartialFromElementVerticalLineKeyword_0_0() { return cPartialFromElementVerticalLineKeyword_0_0; }

		//fromElement=[Classifier|EString]
		public Assignment getFromElementAssignment_1() { return cFromElementAssignment_1; }

		//[Classifier|EString]
		public CrossReference getFromElementClassifierCrossReference_1_0() { return cFromElementClassifierCrossReference_1_0; }

		//EString
		public RuleCall getFromElementClassifierEStringParserRuleCall_1_0_1() { return cFromElementClassifierEStringParserRuleCall_1_0_1; }

		//("<" fromMembers+=[textRam::TClassMember|EString] ("," fromMembers+=[textRam::TClassMember|EString])* ">")?
		public Group getGroup_2() { return cGroup_2; }

		//"<"
		public Keyword getLessThanSignKeyword_2_0() { return cLessThanSignKeyword_2_0; }

		//fromMembers+=[textRam::TClassMember|EString]
		public Assignment getFromMembersAssignment_2_1() { return cFromMembersAssignment_2_1; }

		//[textRam::TClassMember|EString]
		public CrossReference getFromMembersTClassMemberCrossReference_2_1_0() { return cFromMembersTClassMemberCrossReference_2_1_0; }

		//EString
		public RuleCall getFromMembersTClassMemberEStringParserRuleCall_2_1_0_1() { return cFromMembersTClassMemberEStringParserRuleCall_2_1_0_1; }

		//("," fromMembers+=[textRam::TClassMember|EString])*
		public Group getGroup_2_2() { return cGroup_2_2; }

		//","
		public Keyword getCommaKeyword_2_2_0() { return cCommaKeyword_2_2_0; }

		//fromMembers+=[textRam::TClassMember|EString]
		public Assignment getFromMembersAssignment_2_2_1() { return cFromMembersAssignment_2_2_1; }

		//[textRam::TClassMember|EString]
		public CrossReference getFromMembersTClassMemberCrossReference_2_2_1_0() { return cFromMembersTClassMemberCrossReference_2_2_1_0; }

		//EString
		public RuleCall getFromMembersTClassMemberEStringParserRuleCall_2_2_1_0_1() { return cFromMembersTClassMemberEStringParserRuleCall_2_2_1_0_1; }

		//">"
		public Keyword getGreaterThanSignKeyword_2_3() { return cGreaterThanSignKeyword_2_3; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_3() { return cHyphenMinusGreaterThanSignKeyword_3; }

		//partialToElement?="|"?
		public Assignment getPartialToElementAssignment_4() { return cPartialToElementAssignment_4; }

		//"|"
		public Keyword getPartialToElementVerticalLineKeyword_4_0() { return cPartialToElementVerticalLineKeyword_4_0; }

		//toElement=[Classifier|EString]
		public Assignment getToElementAssignment_5() { return cToElementAssignment_5; }

		//[Classifier|EString]
		public CrossReference getToElementClassifierCrossReference_5_0() { return cToElementClassifierCrossReference_5_0; }

		//EString
		public RuleCall getToElementClassifierEStringParserRuleCall_5_0_1() { return cToElementClassifierEStringParserRuleCall_5_0_1; }

		//("<" toMembers+=[textRam::TClassMember|EString] ("," toMembers+=[textRam::TClassMember|EString])* ">")?
		public Group getGroup_6() { return cGroup_6; }

		//"<"
		public Keyword getLessThanSignKeyword_6_0() { return cLessThanSignKeyword_6_0; }

		//toMembers+=[textRam::TClassMember|EString]
		public Assignment getToMembersAssignment_6_1() { return cToMembersAssignment_6_1; }

		//[textRam::TClassMember|EString]
		public CrossReference getToMembersTClassMemberCrossReference_6_1_0() { return cToMembersTClassMemberCrossReference_6_1_0; }

		//EString
		public RuleCall getToMembersTClassMemberEStringParserRuleCall_6_1_0_1() { return cToMembersTClassMemberEStringParserRuleCall_6_1_0_1; }

		//("," toMembers+=[textRam::TClassMember|EString])*
		public Group getGroup_6_2() { return cGroup_6_2; }

		//","
		public Keyword getCommaKeyword_6_2_0() { return cCommaKeyword_6_2_0; }

		//toMembers+=[textRam::TClassMember|EString]
		public Assignment getToMembersAssignment_6_2_1() { return cToMembersAssignment_6_2_1; }

		//[textRam::TClassMember|EString]
		public CrossReference getToMembersTClassMemberCrossReference_6_2_1_0() { return cToMembersTClassMemberCrossReference_6_2_1_0; }

		//EString
		public RuleCall getToMembersTClassMemberEStringParserRuleCall_6_2_1_0_1() { return cToMembersTClassMemberEStringParserRuleCall_6_2_1_0_1; }

		//">"
		public Keyword getGreaterThanSignKeyword_6_3() { return cGreaterThanSignKeyword_6_3; }
	}

	public class TAbstractMessagesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TAbstractMessages");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTMessageViewParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTAspectMessageViewParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//TAbstractMessages returns textRam::TAbstractMessages:
		//	TMessageView | TAspectMessageView;
		public ParserRule getRule() { return rule; }

		//TMessageView | TAspectMessageView
		public Alternatives getAlternatives() { return cAlternatives; }

		//TMessageView
		public RuleCall getTMessageViewParserRuleCall_0() { return cTMessageViewParserRuleCall_0; }

		//TAspectMessageView
		public RuleCall getTAspectMessageViewParserRuleCall_1() { return cTAspectMessageViewParserRuleCall_1; }
	}

	public class TMessageViewElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TMessageView");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTMessageViewAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMessageViewKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cCreateAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cCreateNewKeyword_2_0 = (Keyword)cCreateAssignment_2.eContents().get(0);
		private final Assignment cPartialClassAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cPartialClassVerticalLineKeyword_3_0 = (Keyword)cPartialClassAssignment_3.eContents().get(0);
		private final Assignment cClassAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cClassTClassCrossReference_4_0 = (CrossReference)cClassAssignment_4.eContents().get(0);
		private final RuleCall cClassTClassEStringParserRuleCall_4_0_1 = (RuleCall)cClassTClassCrossReference_4_0.eContents().get(1);
		private final Keyword cFullStopKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cPartialOperationAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final Keyword cPartialOperationVerticalLineKeyword_6_0 = (Keyword)cPartialOperationAssignment_6.eContents().get(0);
		private final Assignment cSpecifiesAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cSpecifiesTOperationCrossReference_7_0 = (CrossReference)cSpecifiesAssignment_7.eContents().get(0);
		private final RuleCall cSpecifiesTOperationEStringParserRuleCall_7_0_1 = (RuleCall)cSpecifiesTOperationCrossReference_7_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Assignment cArgumentsAssignment_9_0 = (Assignment)cGroup_9.eContents().get(0);
		private final CrossReference cArgumentsTParameterCrossReference_9_0_0 = (CrossReference)cArgumentsAssignment_9_0.eContents().get(0);
		private final RuleCall cArgumentsTParameterEStringParserRuleCall_9_0_0_1 = (RuleCall)cArgumentsTParameterCrossReference_9_0_0.eContents().get(1);
		private final Group cGroup_9_1 = (Group)cGroup_9.eContents().get(1);
		private final Keyword cCommaKeyword_9_1_0 = (Keyword)cGroup_9_1.eContents().get(0);
		private final Assignment cArgumentsAssignment_9_1_1 = (Assignment)cGroup_9_1.eContents().get(1);
		private final CrossReference cArgumentsTParameterCrossReference_9_1_1_0 = (CrossReference)cArgumentsAssignment_9_1_1.eContents().get(0);
		private final RuleCall cArgumentsTParameterEStringParserRuleCall_9_1_1_0_1 = (RuleCall)cArgumentsTParameterCrossReference_9_1_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cAffectedByKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cAffectedByAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final CrossReference cAffectedByTAspectMessageViewCrossReference_11_1_0 = (CrossReference)cAffectedByAssignment_11_1.eContents().get(0);
		private final RuleCall cAffectedByTAspectMessageViewEStringParserRuleCall_11_1_0_1 = (RuleCall)cAffectedByTAspectMessageViewCrossReference_11_1_0.eContents().get(1);
		private final Group cGroup_11_2 = (Group)cGroup_11.eContents().get(2);
		private final Keyword cCommaKeyword_11_2_0 = (Keyword)cGroup_11_2.eContents().get(0);
		private final Assignment cAffectedByAssignment_11_2_1 = (Assignment)cGroup_11_2.eContents().get(1);
		private final CrossReference cAffectedByTAspectMessageViewCrossReference_11_2_1_0 = (CrossReference)cAffectedByAssignment_11_2_1.eContents().get(0);
		private final RuleCall cAffectedByTAspectMessageViewEStringParserRuleCall_11_2_1_0_1 = (RuleCall)cAffectedByTAspectMessageViewCrossReference_11_2_1_0.eContents().get(1);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cLeftCurlyBracketKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Assignment cInteractionMessagesAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final RuleCall cInteractionMessagesTInteractionParserRuleCall_12_1_0 = (RuleCall)cInteractionMessagesAssignment_12_1.eContents().get(0);
		private final Group cGroup_12_2 = (Group)cGroup_12.eContents().get(2);
		private final Keyword cSemicolonKeyword_12_2_0 = (Keyword)cGroup_12_2.eContents().get(0);
		private final Assignment cInteractionMessagesAssignment_12_2_1 = (Assignment)cGroup_12_2.eContents().get(1);
		private final RuleCall cInteractionMessagesTInteractionParserRuleCall_12_2_1_0 = (RuleCall)cInteractionMessagesAssignment_12_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12_3 = (Keyword)cGroup_12.eContents().get(3);
		
		//TMessageView returns textRam::TMessageView:
		//	{textRam::TMessageView} "messageView" create?="new"? partialClass?="|"? class=[textRam::TClass|EString] "."
		//	partialOperation?="|"? specifies=[textRam::TOperation|EString] "(" (arguments+=[textRam::TParameter|EString] (","
		//	arguments+=[textRam::TParameter|EString])*)? ")" ("affectedBy" affectedBy+=[textRam::TAspectMessageView|EString] (","
		//	affectedBy+=[textRam::TAspectMessageView|EString]*)?)? ("{" interactionMessages+=TInteraction (";"?
		//	interactionMessages+=TInteraction)* "}")?;
		public ParserRule getRule() { return rule; }

		//{textRam::TMessageView} "messageView" create?="new"? partialClass?="|"? class=[textRam::TClass|EString] "."
		//partialOperation?="|"? specifies=[textRam::TOperation|EString] "(" (arguments+=[textRam::TParameter|EString] (","
		//arguments+=[textRam::TParameter|EString])*)? ")" ("affectedBy" affectedBy+=[textRam::TAspectMessageView|EString] (","
		//affectedBy+=[textRam::TAspectMessageView|EString]*)?)? ("{" interactionMessages+=TInteraction (";"?
		//interactionMessages+=TInteraction)* "}")?
		public Group getGroup() { return cGroup; }

		//{textRam::TMessageView}
		public Action getTMessageViewAction_0() { return cTMessageViewAction_0; }

		//"messageView"
		public Keyword getMessageViewKeyword_1() { return cMessageViewKeyword_1; }

		//create?="new"?
		public Assignment getCreateAssignment_2() { return cCreateAssignment_2; }

		//"new"
		public Keyword getCreateNewKeyword_2_0() { return cCreateNewKeyword_2_0; }

		//partialClass?="|"?
		public Assignment getPartialClassAssignment_3() { return cPartialClassAssignment_3; }

		//"|"
		public Keyword getPartialClassVerticalLineKeyword_3_0() { return cPartialClassVerticalLineKeyword_3_0; }

		//class=[textRam::TClass|EString]
		public Assignment getClassAssignment_4() { return cClassAssignment_4; }

		//[textRam::TClass|EString]
		public CrossReference getClassTClassCrossReference_4_0() { return cClassTClassCrossReference_4_0; }

		//EString
		public RuleCall getClassTClassEStringParserRuleCall_4_0_1() { return cClassTClassEStringParserRuleCall_4_0_1; }

		//"."
		public Keyword getFullStopKeyword_5() { return cFullStopKeyword_5; }

		//partialOperation?="|"?
		public Assignment getPartialOperationAssignment_6() { return cPartialOperationAssignment_6; }

		//"|"
		public Keyword getPartialOperationVerticalLineKeyword_6_0() { return cPartialOperationVerticalLineKeyword_6_0; }

		//specifies=[textRam::TOperation|EString]
		public Assignment getSpecifiesAssignment_7() { return cSpecifiesAssignment_7; }

		//[textRam::TOperation|EString]
		public CrossReference getSpecifiesTOperationCrossReference_7_0() { return cSpecifiesTOperationCrossReference_7_0; }

		//EString
		public RuleCall getSpecifiesTOperationEStringParserRuleCall_7_0_1() { return cSpecifiesTOperationEStringParserRuleCall_7_0_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_8() { return cLeftParenthesisKeyword_8; }

		//(arguments+=[textRam::TParameter|EString] ("," arguments+=[textRam::TParameter|EString])*)?
		public Group getGroup_9() { return cGroup_9; }

		//arguments+=[textRam::TParameter|EString]
		public Assignment getArgumentsAssignment_9_0() { return cArgumentsAssignment_9_0; }

		//[textRam::TParameter|EString]
		public CrossReference getArgumentsTParameterCrossReference_9_0_0() { return cArgumentsTParameterCrossReference_9_0_0; }

		//EString
		public RuleCall getArgumentsTParameterEStringParserRuleCall_9_0_0_1() { return cArgumentsTParameterEStringParserRuleCall_9_0_0_1; }

		//("," arguments+=[textRam::TParameter|EString])*
		public Group getGroup_9_1() { return cGroup_9_1; }

		//","
		public Keyword getCommaKeyword_9_1_0() { return cCommaKeyword_9_1_0; }

		//arguments+=[textRam::TParameter|EString]
		public Assignment getArgumentsAssignment_9_1_1() { return cArgumentsAssignment_9_1_1; }

		//[textRam::TParameter|EString]
		public CrossReference getArgumentsTParameterCrossReference_9_1_1_0() { return cArgumentsTParameterCrossReference_9_1_1_0; }

		//EString
		public RuleCall getArgumentsTParameterEStringParserRuleCall_9_1_1_0_1() { return cArgumentsTParameterEStringParserRuleCall_9_1_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_10() { return cRightParenthesisKeyword_10; }

		//("affectedBy" affectedBy+=[textRam::TAspectMessageView|EString] (","
		//affectedBy+=[textRam::TAspectMessageView|EString]*)?)?
		public Group getGroup_11() { return cGroup_11; }

		//"affectedBy"
		public Keyword getAffectedByKeyword_11_0() { return cAffectedByKeyword_11_0; }

		//affectedBy+=[textRam::TAspectMessageView|EString]
		public Assignment getAffectedByAssignment_11_1() { return cAffectedByAssignment_11_1; }

		//[textRam::TAspectMessageView|EString]
		public CrossReference getAffectedByTAspectMessageViewCrossReference_11_1_0() { return cAffectedByTAspectMessageViewCrossReference_11_1_0; }

		//EString
		public RuleCall getAffectedByTAspectMessageViewEStringParserRuleCall_11_1_0_1() { return cAffectedByTAspectMessageViewEStringParserRuleCall_11_1_0_1; }

		//("," affectedBy+=[textRam::TAspectMessageView|EString]*)?
		public Group getGroup_11_2() { return cGroup_11_2; }

		//","
		public Keyword getCommaKeyword_11_2_0() { return cCommaKeyword_11_2_0; }

		//affectedBy+=[textRam::TAspectMessageView|EString]*
		public Assignment getAffectedByAssignment_11_2_1() { return cAffectedByAssignment_11_2_1; }

		//[textRam::TAspectMessageView|EString]
		public CrossReference getAffectedByTAspectMessageViewCrossReference_11_2_1_0() { return cAffectedByTAspectMessageViewCrossReference_11_2_1_0; }

		//EString
		public RuleCall getAffectedByTAspectMessageViewEStringParserRuleCall_11_2_1_0_1() { return cAffectedByTAspectMessageViewEStringParserRuleCall_11_2_1_0_1; }

		//("{" interactionMessages+=TInteraction (";"? interactionMessages+=TInteraction)* "}")?
		public Group getGroup_12() { return cGroup_12; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_12_0() { return cLeftCurlyBracketKeyword_12_0; }

		//interactionMessages+=TInteraction
		public Assignment getInteractionMessagesAssignment_12_1() { return cInteractionMessagesAssignment_12_1; }

		//TInteraction
		public RuleCall getInteractionMessagesTInteractionParserRuleCall_12_1_0() { return cInteractionMessagesTInteractionParserRuleCall_12_1_0; }

		//(";"? interactionMessages+=TInteraction)*
		public Group getGroup_12_2() { return cGroup_12_2; }

		//";"?
		public Keyword getSemicolonKeyword_12_2_0() { return cSemicolonKeyword_12_2_0; }

		//interactionMessages+=TInteraction
		public Assignment getInteractionMessagesAssignment_12_2_1() { return cInteractionMessagesAssignment_12_2_1; }

		//TInteraction
		public RuleCall getInteractionMessagesTInteractionParserRuleCall_12_2_1_0() { return cInteractionMessagesTInteractionParserRuleCall_12_2_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_12_3() { return cRightCurlyBracketKeyword_12_3; }
	}

	public class TAspectMessageViewElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TAspectMessageView");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTAspectMessageViewAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAspectMessageViewKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cPointcutKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cCreateAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final Keyword cCreateNewKeyword_5_0 = (Keyword)cCreateAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Assignment cPartialClassAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final Keyword cPartialClassVerticalLineKeyword_6_0_0 = (Keyword)cPartialClassAssignment_6_0.eContents().get(0);
		private final Assignment cClassAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cClassTClassCrossReference_6_1_0 = (CrossReference)cClassAssignment_6_1.eContents().get(0);
		private final RuleCall cClassTClassEStringParserRuleCall_6_1_0_1 = (RuleCall)cClassTClassCrossReference_6_1_0.eContents().get(1);
		private final Keyword cFullStopKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Assignment cPartialOperationAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final Keyword cPartialOperationVerticalLineKeyword_7_0 = (Keyword)cPartialOperationAssignment_7.eContents().get(0);
		private final Assignment cSpecifiesAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cSpecifiesTOperationCrossReference_8_0 = (CrossReference)cSpecifiesAssignment_8.eContents().get(0);
		private final RuleCall cSpecifiesTOperationEStringParserRuleCall_8_0_1 = (RuleCall)cSpecifiesTOperationCrossReference_8_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Assignment cArgumentsAssignment_10_0 = (Assignment)cGroup_10.eContents().get(0);
		private final CrossReference cArgumentsTParameterCrossReference_10_0_0 = (CrossReference)cArgumentsAssignment_10_0.eContents().get(0);
		private final RuleCall cArgumentsTParameterEStringParserRuleCall_10_0_0_1 = (RuleCall)cArgumentsTParameterCrossReference_10_0_0.eContents().get(1);
		private final Group cGroup_10_1 = (Group)cGroup_10.eContents().get(1);
		private final Keyword cCommaKeyword_10_1_0 = (Keyword)cGroup_10_1.eContents().get(0);
		private final Assignment cArgumentsAssignment_10_1_1 = (Assignment)cGroup_10_1.eContents().get(1);
		private final CrossReference cArgumentsTParameterCrossReference_10_1_1_0 = (CrossReference)cArgumentsAssignment_10_1_1.eContents().get(0);
		private final RuleCall cArgumentsTParameterEStringParserRuleCall_10_1_1_0_1 = (RuleCall)cArgumentsTParameterCrossReference_10_1_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cAdviceKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cLeftCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cInteractionMessagesAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cInteractionMessagesTInteractionParserRuleCall_14_0 = (RuleCall)cInteractionMessagesAssignment_14.eContents().get(0);
		private final Group cGroup_15 = (Group)cGroup.eContents().get(15);
		private final Keyword cSemicolonKeyword_15_0 = (Keyword)cGroup_15.eContents().get(0);
		private final Assignment cInteractionMessagesAssignment_15_1 = (Assignment)cGroup_15.eContents().get(1);
		private final RuleCall cInteractionMessagesTInteractionParserRuleCall_15_1_0 = (RuleCall)cInteractionMessagesAssignment_15_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Keyword cRightCurlyBracketKeyword_17 = (Keyword)cGroup.eContents().get(17);
		
		//TAspectMessageView returns textRam::TAspectMessageView:
		//	{textRam::TAspectMessageView} "aspectMessageView" name=EString "{" "pointcut" create?="new"? (partialClass?="|"?
		//	class=[textRam::TClass|EString] ".")? partialOperation?="|"? specifies=[textRam::TOperation|EString] "("
		//	(arguments+=[textRam::TParameter|EString] ("," arguments+=[textRam::TParameter|EString])?)? ")" "advice" "{"
		//	interactionMessages+=TInteraction (";"? interactionMessages+=TInteraction)* "}" "}";
		public ParserRule getRule() { return rule; }

		//{textRam::TAspectMessageView} "aspectMessageView" name=EString "{" "pointcut" create?="new"? (partialClass?="|"?
		//class=[textRam::TClass|EString] ".")? partialOperation?="|"? specifies=[textRam::TOperation|EString] "("
		//(arguments+=[textRam::TParameter|EString] ("," arguments+=[textRam::TParameter|EString])?)? ")" "advice" "{"
		//interactionMessages+=TInteraction (";"? interactionMessages+=TInteraction)* "}" "}"
		public Group getGroup() { return cGroup; }

		//{textRam::TAspectMessageView}
		public Action getTAspectMessageViewAction_0() { return cTAspectMessageViewAction_0; }

		//"aspectMessageView"
		public Keyword getAspectMessageViewKeyword_1() { return cAspectMessageViewKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//"pointcut"
		public Keyword getPointcutKeyword_4() { return cPointcutKeyword_4; }

		//create?="new"?
		public Assignment getCreateAssignment_5() { return cCreateAssignment_5; }

		//"new"
		public Keyword getCreateNewKeyword_5_0() { return cCreateNewKeyword_5_0; }

		//(partialClass?="|"? class=[textRam::TClass|EString] ".")?
		public Group getGroup_6() { return cGroup_6; }

		//partialClass?="|"?
		public Assignment getPartialClassAssignment_6_0() { return cPartialClassAssignment_6_0; }

		//"|"
		public Keyword getPartialClassVerticalLineKeyword_6_0_0() { return cPartialClassVerticalLineKeyword_6_0_0; }

		//class=[textRam::TClass|EString]
		public Assignment getClassAssignment_6_1() { return cClassAssignment_6_1; }

		//[textRam::TClass|EString]
		public CrossReference getClassTClassCrossReference_6_1_0() { return cClassTClassCrossReference_6_1_0; }

		//EString
		public RuleCall getClassTClassEStringParserRuleCall_6_1_0_1() { return cClassTClassEStringParserRuleCall_6_1_0_1; }

		//"."
		public Keyword getFullStopKeyword_6_2() { return cFullStopKeyword_6_2; }

		//partialOperation?="|"?
		public Assignment getPartialOperationAssignment_7() { return cPartialOperationAssignment_7; }

		//"|"
		public Keyword getPartialOperationVerticalLineKeyword_7_0() { return cPartialOperationVerticalLineKeyword_7_0; }

		//specifies=[textRam::TOperation|EString]
		public Assignment getSpecifiesAssignment_8() { return cSpecifiesAssignment_8; }

		//[textRam::TOperation|EString]
		public CrossReference getSpecifiesTOperationCrossReference_8_0() { return cSpecifiesTOperationCrossReference_8_0; }

		//EString
		public RuleCall getSpecifiesTOperationEStringParserRuleCall_8_0_1() { return cSpecifiesTOperationEStringParserRuleCall_8_0_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_9() { return cLeftParenthesisKeyword_9; }

		//(arguments+=[textRam::TParameter|EString] ("," arguments+=[textRam::TParameter|EString])?)?
		public Group getGroup_10() { return cGroup_10; }

		//arguments+=[textRam::TParameter|EString]
		public Assignment getArgumentsAssignment_10_0() { return cArgumentsAssignment_10_0; }

		//[textRam::TParameter|EString]
		public CrossReference getArgumentsTParameterCrossReference_10_0_0() { return cArgumentsTParameterCrossReference_10_0_0; }

		//EString
		public RuleCall getArgumentsTParameterEStringParserRuleCall_10_0_0_1() { return cArgumentsTParameterEStringParserRuleCall_10_0_0_1; }

		//("," arguments+=[textRam::TParameter|EString])?
		public Group getGroup_10_1() { return cGroup_10_1; }

		//","
		public Keyword getCommaKeyword_10_1_0() { return cCommaKeyword_10_1_0; }

		//arguments+=[textRam::TParameter|EString]
		public Assignment getArgumentsAssignment_10_1_1() { return cArgumentsAssignment_10_1_1; }

		//[textRam::TParameter|EString]
		public CrossReference getArgumentsTParameterCrossReference_10_1_1_0() { return cArgumentsTParameterCrossReference_10_1_1_0; }

		//EString
		public RuleCall getArgumentsTParameterEStringParserRuleCall_10_1_1_0_1() { return cArgumentsTParameterEStringParserRuleCall_10_1_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_11() { return cRightParenthesisKeyword_11; }

		//"advice"
		public Keyword getAdviceKeyword_12() { return cAdviceKeyword_12; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_13() { return cLeftCurlyBracketKeyword_13; }

		//interactionMessages+=TInteraction
		public Assignment getInteractionMessagesAssignment_14() { return cInteractionMessagesAssignment_14; }

		//TInteraction
		public RuleCall getInteractionMessagesTInteractionParserRuleCall_14_0() { return cInteractionMessagesTInteractionParserRuleCall_14_0; }

		//(";"? interactionMessages+=TInteraction)*
		public Group getGroup_15() { return cGroup_15; }

		//";"?
		public Keyword getSemicolonKeyword_15_0() { return cSemicolonKeyword_15_0; }

		//interactionMessages+=TInteraction
		public Assignment getInteractionMessagesAssignment_15_1() { return cInteractionMessagesAssignment_15_1; }

		//TInteraction
		public RuleCall getInteractionMessagesTInteractionParserRuleCall_15_1_0() { return cInteractionMessagesTInteractionParserRuleCall_15_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_16() { return cRightCurlyBracketKeyword_16; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_17() { return cRightCurlyBracketKeyword_17; }
	}

	public class TLifelineElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TLifeline");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cStaticAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cStaticStaticKeyword_0_0 = (Keyword)cStaticAssignment_0.eContents().get(0);
		private final Assignment cReferenceTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cReferenceTypeTLifelineReferenceTypeEnumRuleCall_1_0 = (RuleCall)cReferenceTypeAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRepresentsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cRepresentsTTypedElementCrossReference_4_0 = (CrossReference)cRepresentsAssignment_4.eContents().get(0);
		private final RuleCall cRepresentsTTypedElementEStringParserRuleCall_4_0_1 = (RuleCall)cRepresentsTTypedElementCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cLocalPropertiesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cLocalPropertiesTTemporaryPropertyParserRuleCall_5_1_0 = (RuleCall)cLocalPropertiesAssignment_5_1.eContents().get(0);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cSemicolonKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cLocalPropertiesAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final RuleCall cLocalPropertiesTTemporaryPropertyParserRuleCall_5_2_1_0 = (RuleCall)cLocalPropertiesAssignment_5_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		
		//TLifeline returns textRam::TLifeline:
		//	static?="static"? referenceType=TLifelineReferenceType name=EString ":" represents=[textRam::TTypedElement|EString]?
		//	("{" localProperties+=TTemporaryProperty (";"? localProperties+=TTemporaryProperty)* "}")?;
		public ParserRule getRule() { return rule; }

		//static?="static"? referenceType=TLifelineReferenceType name=EString ":" represents=[textRam::TTypedElement|EString]?
		//("{" localProperties+=TTemporaryProperty (";"? localProperties+=TTemporaryProperty)* "}")?
		public Group getGroup() { return cGroup; }

		//static?="static"?
		public Assignment getStaticAssignment_0() { return cStaticAssignment_0; }

		//"static"
		public Keyword getStaticStaticKeyword_0_0() { return cStaticStaticKeyword_0_0; }

		//referenceType=TLifelineReferenceType
		public Assignment getReferenceTypeAssignment_1() { return cReferenceTypeAssignment_1; }

		//TLifelineReferenceType
		public RuleCall getReferenceTypeTLifelineReferenceTypeEnumRuleCall_1_0() { return cReferenceTypeTLifelineReferenceTypeEnumRuleCall_1_0; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//":"
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }

		//represents=[textRam::TTypedElement|EString]?
		public Assignment getRepresentsAssignment_4() { return cRepresentsAssignment_4; }

		//[textRam::TTypedElement|EString]
		public CrossReference getRepresentsTTypedElementCrossReference_4_0() { return cRepresentsTTypedElementCrossReference_4_0; }

		//EString
		public RuleCall getRepresentsTTypedElementEStringParserRuleCall_4_0_1() { return cRepresentsTTypedElementEStringParserRuleCall_4_0_1; }

		//("{" localProperties+=TTemporaryProperty (";"? localProperties+=TTemporaryProperty)* "}")?
		public Group getGroup_5() { return cGroup_5; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5_0() { return cLeftCurlyBracketKeyword_5_0; }

		//localProperties+=TTemporaryProperty
		public Assignment getLocalPropertiesAssignment_5_1() { return cLocalPropertiesAssignment_5_1; }

		//TTemporaryProperty
		public RuleCall getLocalPropertiesTTemporaryPropertyParserRuleCall_5_1_0() { return cLocalPropertiesTTemporaryPropertyParserRuleCall_5_1_0; }

		//(";"? localProperties+=TTemporaryProperty)*
		public Group getGroup_5_2() { return cGroup_5_2; }

		//";"?
		public Keyword getSemicolonKeyword_5_2_0() { return cSemicolonKeyword_5_2_0; }

		//localProperties+=TTemporaryProperty
		public Assignment getLocalPropertiesAssignment_5_2_1() { return cLocalPropertiesAssignment_5_2_1; }

		//TTemporaryProperty
		public RuleCall getLocalPropertiesTTemporaryPropertyParserRuleCall_5_2_1_0() { return cLocalPropertiesTTemporaryPropertyParserRuleCall_5_2_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5_3() { return cRightCurlyBracketKeyword_5_3; }
	}

	public class TValueSpecificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TValueSpecification");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTTemporaryPropertyParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTParameterParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cTLifelineParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cTDummyValueSpecificationParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//TValueSpecification returns textRam::TValueSpecification:
		//	TTemporaryProperty | TParameter | TLifeline | TDummyValueSpecification;
		public ParserRule getRule() { return rule; }

		//TTemporaryProperty | TParameter | TLifeline | TDummyValueSpecification
		public Alternatives getAlternatives() { return cAlternatives; }

		//TTemporaryProperty
		public RuleCall getTTemporaryPropertyParserRuleCall_0() { return cTTemporaryPropertyParserRuleCall_0; }

		//TParameter
		public RuleCall getTParameterParserRuleCall_1() { return cTParameterParserRuleCall_1; }

		//TLifeline
		public RuleCall getTLifelineParserRuleCall_2() { return cTLifelineParserRuleCall_2; }

		//TDummyValueSpecification
		public RuleCall getTDummyValueSpecificationParserRuleCall_3() { return cTDummyValueSpecificationParserRuleCall_3; }
	}

	public class TDummyValueSpecificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TDummyValueSpecification");
		private final Assignment cDummyAssignment = (Assignment)rule.eContents().get(1);
		private final Keyword cDummyTrueKeyword_0 = (Keyword)cDummyAssignment.eContents().get(0);
		
		//TDummyValueSpecification returns textRam::TDummyValueSpecification:
		//	dummy?="true";
		public ParserRule getRule() { return rule; }

		//dummy?="true"
		public Assignment getDummyAssignment() { return cDummyAssignment; }

		//"true"
		public Keyword getDummyTrueKeyword_0() { return cDummyTrueKeyword_0; }
	}

	public class TTemporaryPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TTemporaryProperty");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTReferenceParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTLocalAttributeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//TTemporaryProperty returns textRam::TTemporaryProperty:
		//	TReference | TLocalAttribute;
		public ParserRule getRule() { return rule; }

		//TReference | TLocalAttribute
		public Alternatives getAlternatives() { return cAlternatives; }

		//TReference
		public RuleCall getTReferenceParserRuleCall_0() { return cTReferenceParserRuleCall_0; }

		//TLocalAttribute
		public RuleCall getTLocalAttributeParserRuleCall_1() { return cTLocalAttributeParserRuleCall_1; }
	}

	public class TReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEStringParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPartialClassAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cPartialClassVerticalLineKeyword_2_0 = (Keyword)cPartialClassAssignment_2.eContents().get(0);
		private final Assignment cReferenceAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cReferenceTClassCrossReference_3_0 = (CrossReference)cReferenceAssignment_3.eContents().get(0);
		private final RuleCall cReferenceTClassEStringParserRuleCall_3_0_1 = (RuleCall)cReferenceTClassCrossReference_3_0.eContents().get(1);
		
		//TReference returns textRam::TReference:
		//	name=EString ":" partialClass?="|"? reference=[textRam::TClass|EString];
		public ParserRule getRule() { return rule; }

		//name=EString ":" partialClass?="|"? reference=[textRam::TClass|EString]
		public Group getGroup() { return cGroup; }

		//name=EString
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//EString
		public RuleCall getNameEStringParserRuleCall_0_0() { return cNameEStringParserRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//partialClass?="|"?
		public Assignment getPartialClassAssignment_2() { return cPartialClassAssignment_2; }

		//"|"
		public Keyword getPartialClassVerticalLineKeyword_2_0() { return cPartialClassVerticalLineKeyword_2_0; }

		//reference=[textRam::TClass|EString]
		public Assignment getReferenceAssignment_3() { return cReferenceAssignment_3; }

		//[textRam::TClass|EString]
		public CrossReference getReferenceTClassCrossReference_3_0() { return cReferenceTClassCrossReference_3_0; }

		//EString
		public RuleCall getReferenceTClassEStringParserRuleCall_3_0_1() { return cReferenceTClassEStringParserRuleCall_3_0_1; }
	}

	public class TLocalAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TLocalAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cTypePrimitiveTypeCrossReference_0_0 = (CrossReference)cTypeAssignment_0.eContents().get(0);
		private final RuleCall cTypePrimitiveTypeEStringParserRuleCall_0_0_1 = (RuleCall)cTypePrimitiveTypeCrossReference_0_0.eContents().get(1);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cEqualsSignKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cValueAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cValueEStringParserRuleCall_2_1_0 = (RuleCall)cValueAssignment_2_1.eContents().get(0);
		
		//TLocalAttribute returns textRam::TLocalAttribute:
		//	type=[PrimitiveType|EString] name=EString ("=" value=EString)?;
		public ParserRule getRule() { return rule; }

		//type=[PrimitiveType|EString] name=EString ("=" value=EString)?
		public Group getGroup() { return cGroup; }

		//type=[PrimitiveType|EString]
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//[PrimitiveType|EString]
		public CrossReference getTypePrimitiveTypeCrossReference_0_0() { return cTypePrimitiveTypeCrossReference_0_0; }

		//EString
		public RuleCall getTypePrimitiveTypeEStringParserRuleCall_0_0_1() { return cTypePrimitiveTypeEStringParserRuleCall_0_0_1; }

		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }

		//("=" value=EString)?
		public Group getGroup_2() { return cGroup_2; }

		//"="
		public Keyword getEqualsSignKeyword_2_0() { return cEqualsSignKeyword_2_0; }

		//value=EString
		public Assignment getValueAssignment_2_1() { return cValueAssignment_2_1; }

		//EString
		public RuleCall getValueEStringParserRuleCall_2_1_0() { return cValueEStringParserRuleCall_2_1_0; }
	}

	public class TInteractionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TInteraction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTInteractionMessageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTCombinedFragmentParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cTOcurrenceParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//TInteraction returns textRam::TInteraction:
		//	TInteractionMessage | TCombinedFragment | TOcurrence;
		public ParserRule getRule() { return rule; }

		//TInteractionMessage | TCombinedFragment | TOcurrence
		public Alternatives getAlternatives() { return cAlternatives; }

		//TInteractionMessage
		public RuleCall getTInteractionMessageParserRuleCall_0() { return cTInteractionMessageParserRuleCall_0; }

		//TCombinedFragment
		public RuleCall getTCombinedFragmentParserRuleCall_1() { return cTCombinedFragmentParserRuleCall_1; }

		//TOcurrence
		public RuleCall getTOcurrenceParserRuleCall_2() { return cTOcurrenceParserRuleCall_2; }
	}

	public class TOcurrenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TOcurrence");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cLeftLifelineAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cLeftLifelineTLifelineCrossReference_0_0 = (CrossReference)cLeftLifelineAssignment_0.eContents().get(0);
		private final RuleCall cLeftLifelineTLifelineEStringParserRuleCall_0_0_1 = (RuleCall)cLeftLifelineTLifelineCrossReference_0_0.eContents().get(1);
		private final Keyword cEqualsSignGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOcurrenceTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOcurrenceTypeOcurrenceTypeEnumRuleCall_2_0 = (RuleCall)cOcurrenceTypeAssignment_2.eContents().get(0);
		
		//TOcurrence returns textRam::TOcurrence:
		//	leftLifeline=[textRam::TLifeline|EString] "=>" ocurrenceType=OcurrenceType;
		public ParserRule getRule() { return rule; }

		//leftLifeline=[textRam::TLifeline|EString] "=>" ocurrenceType=OcurrenceType
		public Group getGroup() { return cGroup; }

		//leftLifeline=[textRam::TLifeline|EString]
		public Assignment getLeftLifelineAssignment_0() { return cLeftLifelineAssignment_0; }

		//[textRam::TLifeline|EString]
		public CrossReference getLeftLifelineTLifelineCrossReference_0_0() { return cLeftLifelineTLifelineCrossReference_0_0; }

		//EString
		public RuleCall getLeftLifelineTLifelineEStringParserRuleCall_0_0_1() { return cLeftLifelineTLifelineEStringParserRuleCall_0_0_1; }

		//"=>"
		public Keyword getEqualsSignGreaterThanSignKeyword_1() { return cEqualsSignGreaterThanSignKeyword_1; }

		//ocurrenceType=OcurrenceType
		public Assignment getOcurrenceTypeAssignment_2() { return cOcurrenceTypeAssignment_2; }

		//OcurrenceType
		public RuleCall getOcurrenceTypeOcurrenceTypeEnumRuleCall_2_0() { return cOcurrenceTypeOcurrenceTypeEnumRuleCall_2_0; }
	}

	public class TInteractionMessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TInteractionMessage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cLeftLifelineAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cLeftLifelineTLifelineCrossReference_0_0 = (CrossReference)cLeftLifelineAssignment_0.eContents().get(0);
		private final RuleCall cLeftLifelineTLifelineEStringParserRuleCall_0_0_1 = (RuleCall)cLeftLifelineTLifelineCrossReference_0_0.eContents().get(1);
		private final Keyword cEqualsSignGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cCreateAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cCreateNewKeyword_2_0 = (Keyword)cCreateAssignment_2.eContents().get(0);
		private final Assignment cRightLifelineAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cRightLifelineTLifelineCrossReference_3_0 = (CrossReference)cRightLifelineAssignment_3.eContents().get(0);
		private final RuleCall cRightLifelineTLifelineEStringParserRuleCall_3_0_1 = (RuleCall)cRightLifelineTLifelineCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cMessageAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cMessageTAbstractMessageParserRuleCall_4_1_0 = (RuleCall)cMessageAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		
		//TInteractionMessage returns textRam::TInteractionMessage:
		//	leftLifeline=[textRam::TLifeline|EString] "=>" create?="new"? rightLifeline=[textRam::TLifeline|EString] ("{"
		//	message=TAbstractMessage "}")?;
		public ParserRule getRule() { return rule; }

		//leftLifeline=[textRam::TLifeline|EString] "=>" create?="new"? rightLifeline=[textRam::TLifeline|EString] ("{"
		//message=TAbstractMessage "}")?
		public Group getGroup() { return cGroup; }

		//leftLifeline=[textRam::TLifeline|EString]
		public Assignment getLeftLifelineAssignment_0() { return cLeftLifelineAssignment_0; }

		//[textRam::TLifeline|EString]
		public CrossReference getLeftLifelineTLifelineCrossReference_0_0() { return cLeftLifelineTLifelineCrossReference_0_0; }

		//EString
		public RuleCall getLeftLifelineTLifelineEStringParserRuleCall_0_0_1() { return cLeftLifelineTLifelineEStringParserRuleCall_0_0_1; }

		//"=>"
		public Keyword getEqualsSignGreaterThanSignKeyword_1() { return cEqualsSignGreaterThanSignKeyword_1; }

		//create?="new"?
		public Assignment getCreateAssignment_2() { return cCreateAssignment_2; }

		//"new"
		public Keyword getCreateNewKeyword_2_0() { return cCreateNewKeyword_2_0; }

		//rightLifeline=[textRam::TLifeline|EString]
		public Assignment getRightLifelineAssignment_3() { return cRightLifelineAssignment_3; }

		//[textRam::TLifeline|EString]
		public CrossReference getRightLifelineTLifelineCrossReference_3_0() { return cRightLifelineTLifelineCrossReference_3_0; }

		//EString
		public RuleCall getRightLifelineTLifelineEStringParserRuleCall_3_0_1() { return cRightLifelineTLifelineEStringParserRuleCall_3_0_1; }

		//("{" message=TAbstractMessage "}")?
		public Group getGroup_4() { return cGroup_4; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4_0() { return cLeftCurlyBracketKeyword_4_0; }

		//message=TAbstractMessage
		public Assignment getMessageAssignment_4_1() { return cMessageAssignment_4_1; }

		//TAbstractMessage
		public RuleCall getMessageTAbstractMessageParserRuleCall_4_1_0() { return cMessageTAbstractMessageParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4_2() { return cRightCurlyBracketKeyword_4_2; }
	}

	public class TCombinedFragmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TCombinedFragment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cInteractionOperatorAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cInteractionOperatorInteractionOperatorKindEnumRuleCall_0_0 = (RuleCall)cInteractionOperatorAssignment_0.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cInteractionConstraintAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cInteractionConstraintEStringParserRuleCall_2_0 = (RuleCall)cInteractionConstraintAssignment_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cContainersAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cContainersTInteractionParserRuleCall_5_0 = (RuleCall)cContainersAssignment_5.eContents().get(0);
		private final Assignment cContainersAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cContainersTInteractionParserRuleCall_6_0 = (RuleCall)cContainersAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cElseKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cElseContainersAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cElseContainersTInteractionParserRuleCall_8_2_0 = (RuleCall)cElseContainersAssignment_8_2.eContents().get(0);
		private final Assignment cElseContainersAssignment_8_3 = (Assignment)cGroup_8.eContents().get(3);
		private final RuleCall cElseContainersTInteractionParserRuleCall_8_3_0 = (RuleCall)cElseContainersAssignment_8_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8_4 = (Keyword)cGroup_8.eContents().get(4);
		
		//TCombinedFragment returns textRam::TCombinedFragment:
		//	interactionOperator=InteractionOperatorKind "[" interactionConstraint=EString "]" "{" containers+=TInteraction
		//	containers+=TInteraction* "}" ("else" "{" elseContainers+=TInteraction elseContainers+=TInteraction* "}")?;
		public ParserRule getRule() { return rule; }

		//interactionOperator=InteractionOperatorKind "[" interactionConstraint=EString "]" "{" containers+=TInteraction
		//containers+=TInteraction* "}" ("else" "{" elseContainers+=TInteraction elseContainers+=TInteraction* "}")?
		public Group getGroup() { return cGroup; }

		//interactionOperator=InteractionOperatorKind
		public Assignment getInteractionOperatorAssignment_0() { return cInteractionOperatorAssignment_0; }

		//InteractionOperatorKind
		public RuleCall getInteractionOperatorInteractionOperatorKindEnumRuleCall_0_0() { return cInteractionOperatorInteractionOperatorKindEnumRuleCall_0_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }

		//interactionConstraint=EString
		public Assignment getInteractionConstraintAssignment_2() { return cInteractionConstraintAssignment_2; }

		//EString
		public RuleCall getInteractionConstraintEStringParserRuleCall_2_0() { return cInteractionConstraintEStringParserRuleCall_2_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//containers+=TInteraction
		public Assignment getContainersAssignment_5() { return cContainersAssignment_5; }

		//TInteraction
		public RuleCall getContainersTInteractionParserRuleCall_5_0() { return cContainersTInteractionParserRuleCall_5_0; }

		//containers+=TInteraction*
		public Assignment getContainersAssignment_6() { return cContainersAssignment_6; }

		//TInteraction
		public RuleCall getContainersTInteractionParserRuleCall_6_0() { return cContainersTInteractionParserRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }

		//("else" "{" elseContainers+=TInteraction elseContainers+=TInteraction* "}")?
		public Group getGroup_8() { return cGroup_8; }

		//"else"
		public Keyword getElseKeyword_8_0() { return cElseKeyword_8_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_8_1() { return cLeftCurlyBracketKeyword_8_1; }

		//elseContainers+=TInteraction
		public Assignment getElseContainersAssignment_8_2() { return cElseContainersAssignment_8_2; }

		//TInteraction
		public RuleCall getElseContainersTInteractionParserRuleCall_8_2_0() { return cElseContainersTInteractionParserRuleCall_8_2_0; }

		//elseContainers+=TInteraction*
		public Assignment getElseContainersAssignment_8_3() { return cElseContainersAssignment_8_3; }

		//TInteraction
		public RuleCall getElseContainersTInteractionParserRuleCall_8_3_0() { return cElseContainersTInteractionParserRuleCall_8_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8_4() { return cRightCurlyBracketKeyword_8_4; }
	}

	public class TAbstractMessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TAbstractMessage");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTMessageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTReturnMessageParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//TAbstractMessage returns textRam::TAbstractMessage:
		//	TMessage | TReturnMessage;
		public ParserRule getRule() { return rule; }

		//TMessage | TReturnMessage
		public Alternatives getAlternatives() { return cAlternatives; }

		//TMessage
		public RuleCall getTMessageParserRuleCall_0() { return cTMessageParserRuleCall_0; }

		//TReturnMessage
		public RuleCall getTReturnMessageParserRuleCall_1() { return cTReturnMessageParserRuleCall_1; }
	}

	public class TReturnMessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TReturnMessage");
		private final Assignment cAssignToAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cAssignToTMessageAssignableFeatureCrossReference_0 = (CrossReference)cAssignToAssignment.eContents().get(0);
		private final RuleCall cAssignToTMessageAssignableFeatureEStringParserRuleCall_0_1 = (RuleCall)cAssignToTMessageAssignableFeatureCrossReference_0.eContents().get(1);
		
		//TReturnMessage returns textRam::TReturnMessage:
		//	assignTo=[textRam::TMessageAssignableFeature|EString];
		public ParserRule getRule() { return rule; }

		//assignTo=[textRam::TMessageAssignableFeature|EString]
		public Assignment getAssignToAssignment() { return cAssignToAssignment; }

		//[textRam::TMessageAssignableFeature|EString]
		public CrossReference getAssignToTMessageAssignableFeatureCrossReference_0() { return cAssignToTMessageAssignableFeatureCrossReference_0; }

		//EString
		public RuleCall getAssignToTMessageAssignableFeatureEStringParserRuleCall_0_1() { return cAssignToTMessageAssignableFeatureEStringParserRuleCall_0_1; }
	}

	public class TMessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TMessage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cAssignToAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final CrossReference cAssignToTMessageAssignableFeatureCrossReference_0_0_0 = (CrossReference)cAssignToAssignment_0_0.eContents().get(0);
		private final RuleCall cAssignToTMessageAssignableFeatureEStringParserRuleCall_0_0_0_1 = (RuleCall)cAssignToTMessageAssignableFeatureCrossReference_0_0_0.eContents().get(1);
		private final Keyword cColonEqualsSignKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cPartialOperationAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cPartialOperationVerticalLineKeyword_1_0 = (Keyword)cPartialOperationAssignment_1.eContents().get(0);
		private final Assignment cSignatureAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cSignatureTOperationCrossReference_2_0 = (CrossReference)cSignatureAssignment_2.eContents().get(0);
		private final RuleCall cSignatureTOperationEStringParserRuleCall_2_0_1 = (RuleCall)cSignatureTOperationCrossReference_2_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cArgumentsAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final CrossReference cArgumentsTValueSpecificationCrossReference_4_0_0 = (CrossReference)cArgumentsAssignment_4_0.eContents().get(0);
		private final RuleCall cArgumentsTValueSpecificationEStringParserRuleCall_4_0_0_1 = (RuleCall)cArgumentsTValueSpecificationCrossReference_4_0_0.eContents().get(1);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cArgumentsAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final CrossReference cArgumentsTValueSpecificationCrossReference_4_1_1_0 = (CrossReference)cArgumentsAssignment_4_1_1.eContents().get(0);
		private final RuleCall cArgumentsTValueSpecificationEStringParserRuleCall_4_1_1_0_1 = (RuleCall)cArgumentsTValueSpecificationCrossReference_4_1_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//TMessage returns textRam::TMessage:
		//	(assignTo=[textRam::TMessageAssignableFeature|EString] ":=")? partialOperation?="|"?
		//	signature=[textRam::TOperation|EString] "(" (arguments+=[textRam::TValueSpecification|EString] (","
		//	arguments+=[textRam::TValueSpecification|EString])?)? ")";
		public ParserRule getRule() { return rule; }

		//(assignTo=[textRam::TMessageAssignableFeature|EString] ":=")? partialOperation?="|"?
		//signature=[textRam::TOperation|EString] "(" (arguments+=[textRam::TValueSpecification|EString] (","
		//arguments+=[textRam::TValueSpecification|EString])?)? ")"
		public Group getGroup() { return cGroup; }

		//(assignTo=[textRam::TMessageAssignableFeature|EString] ":=")?
		public Group getGroup_0() { return cGroup_0; }

		//assignTo=[textRam::TMessageAssignableFeature|EString]
		public Assignment getAssignToAssignment_0_0() { return cAssignToAssignment_0_0; }

		//[textRam::TMessageAssignableFeature|EString]
		public CrossReference getAssignToTMessageAssignableFeatureCrossReference_0_0_0() { return cAssignToTMessageAssignableFeatureCrossReference_0_0_0; }

		//EString
		public RuleCall getAssignToTMessageAssignableFeatureEStringParserRuleCall_0_0_0_1() { return cAssignToTMessageAssignableFeatureEStringParserRuleCall_0_0_0_1; }

		//":="
		public Keyword getColonEqualsSignKeyword_0_1() { return cColonEqualsSignKeyword_0_1; }

		//partialOperation?="|"?
		public Assignment getPartialOperationAssignment_1() { return cPartialOperationAssignment_1; }

		//"|"
		public Keyword getPartialOperationVerticalLineKeyword_1_0() { return cPartialOperationVerticalLineKeyword_1_0; }

		//signature=[textRam::TOperation|EString]
		public Assignment getSignatureAssignment_2() { return cSignatureAssignment_2; }

		//[textRam::TOperation|EString]
		public CrossReference getSignatureTOperationCrossReference_2_0() { return cSignatureTOperationCrossReference_2_0; }

		//EString
		public RuleCall getSignatureTOperationEStringParserRuleCall_2_0_1() { return cSignatureTOperationEStringParserRuleCall_2_0_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }

		//(arguments+=[textRam::TValueSpecification|EString] ("," arguments+=[textRam::TValueSpecification|EString])?)?
		public Group getGroup_4() { return cGroup_4; }

		//arguments+=[textRam::TValueSpecification|EString]
		public Assignment getArgumentsAssignment_4_0() { return cArgumentsAssignment_4_0; }

		//[textRam::TValueSpecification|EString]
		public CrossReference getArgumentsTValueSpecificationCrossReference_4_0_0() { return cArgumentsTValueSpecificationCrossReference_4_0_0; }

		//EString
		public RuleCall getArgumentsTValueSpecificationEStringParserRuleCall_4_0_0_1() { return cArgumentsTValueSpecificationEStringParserRuleCall_4_0_0_1; }

		//("," arguments+=[textRam::TValueSpecification|EString])?
		public Group getGroup_4_1() { return cGroup_4_1; }

		//","
		public Keyword getCommaKeyword_4_1_0() { return cCommaKeyword_4_1_0; }

		//arguments+=[textRam::TValueSpecification|EString]
		public Assignment getArgumentsAssignment_4_1_1() { return cArgumentsAssignment_4_1_1; }

		//[textRam::TValueSpecification|EString]
		public CrossReference getArgumentsTValueSpecificationCrossReference_4_1_1_0() { return cArgumentsTValueSpecificationCrossReference_4_1_1_0; }

		//EString
		public RuleCall getArgumentsTValueSpecificationEStringParserRuleCall_4_1_1_0_1() { return cArgumentsTValueSpecificationEStringParserRuleCall_4_1_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}

	public class TTypedElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TTypedElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTAssociationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTAttributeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cTClassParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		////TODO: It should be StructuralFeature | Parameter
		//TTypedElement returns textRam::TTypedElement:
		//	TAssociation | TAttribute | TClass;
		public ParserRule getRule() { return rule; }

		//TAssociation | TAttribute | TClass
		public Alternatives getAlternatives() { return cAlternatives; }

		//TAssociation
		public RuleCall getTAssociationParserRuleCall_0() { return cTAssociationParserRuleCall_0; }

		//TAttribute
		public RuleCall getTAttributeParserRuleCall_1() { return cTAttributeParserRuleCall_1; }

		//TClass
		public RuleCall getTClassParserRuleCall_2() { return cTClassParserRuleCall_2; }
	}

	public class TMessageAssignableFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TMessageAssignableFeature");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTAssociationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTTemporaryPropertyParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cTLifelineParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		////AssignableFeature
		//TMessageAssignableFeature returns textRam::TMessageAssignableFeature:
		//	TAssociation | TTemporaryProperty | TLifeline;
		public ParserRule getRule() { return rule; }

		//TAssociation | TTemporaryProperty | TLifeline
		public Alternatives getAlternatives() { return cAlternatives; }

		//TAssociation
		public RuleCall getTAssociationParserRuleCall_0() { return cTAssociationParserRuleCall_0; }

		//TTemporaryProperty
		public RuleCall getTTemporaryPropertyParserRuleCall_1() { return cTTemporaryPropertyParserRuleCall_1; }

		//TLifeline
		public RuleCall getTLifelineParserRuleCall_2() { return cTLifelineParserRuleCall_2; }
	}

	public class LiteralStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LiteralString");
		private final Action cLiteralStringAction = (Action)rule.eContents().get(1);
		
		//LiteralString:
		//	{LiteralString};
		public ParserRule getRule() { return rule; }

		//{LiteralString}
		public Action getLiteralStringAction() { return cLiteralStringAction; }
	}
	
	
	public class VisibilityElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "Visibility");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPublicEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPublicPlusSignKeyword_0_0 = (Keyword)cPublicEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPrivateEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPrivateHyphenMinusKeyword_1_0 = (Keyword)cPrivateEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cProtectedEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cProtectedNumberSignKeyword_2_0 = (Keyword)cProtectedEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cPackageEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cPackageTildeKeyword_3_0 = (Keyword)cPackageEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum Visibility:
		//	public="+" | private="-" | protected="#" | package="~";
		public EnumRule getRule() { return rule; }

		//public="+" | private="-" | protected="#" | package="~"
		public Alternatives getAlternatives() { return cAlternatives; }

		//public="+"
		public EnumLiteralDeclaration getPublicEnumLiteralDeclaration_0() { return cPublicEnumLiteralDeclaration_0; }

		//"+"
		public Keyword getPublicPlusSignKeyword_0_0() { return cPublicPlusSignKeyword_0_0; }

		//private="-"
		public EnumLiteralDeclaration getPrivateEnumLiteralDeclaration_1() { return cPrivateEnumLiteralDeclaration_1; }

		//"-"
		public Keyword getPrivateHyphenMinusKeyword_1_0() { return cPrivateHyphenMinusKeyword_1_0; }

		//protected="#"
		public EnumLiteralDeclaration getProtectedEnumLiteralDeclaration_2() { return cProtectedEnumLiteralDeclaration_2; }

		//"#"
		public Keyword getProtectedNumberSignKeyword_2_0() { return cProtectedNumberSignKeyword_2_0; }

		//package="~"
		public EnumLiteralDeclaration getPackageEnumLiteralDeclaration_3() { return cPackageEnumLiteralDeclaration_3; }

		//"~"
		public Keyword getPackageTildeKeyword_3_0() { return cPackageTildeKeyword_3_0; }
	}

	public class InstantiationTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "InstantiationType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDependsEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDependsDependsOnKeyword_0_0 = (Keyword)cDependsEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cExtendsEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cExtendsExtendsKeyword_1_0 = (Keyword)cExtendsEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum InstantiationType:
		//	Depends="dependsOn" | Extends="extends";
		public EnumRule getRule() { return rule; }

		//Depends="dependsOn" | Extends="extends"
		public Alternatives getAlternatives() { return cAlternatives; }

		//Depends="dependsOn"
		public EnumLiteralDeclaration getDependsEnumLiteralDeclaration_0() { return cDependsEnumLiteralDeclaration_0; }

		//"dependsOn"
		public Keyword getDependsDependsOnKeyword_0_0() { return cDependsDependsOnKeyword_0_0; }

		//Extends="extends"
		public EnumLiteralDeclaration getExtendsEnumLiteralDeclaration_1() { return cExtendsEnumLiteralDeclaration_1; }

		//"extends"
		public Keyword getExtendsExtendsKeyword_1_0() { return cExtendsExtendsKeyword_1_0; }
	}

	public class MessageSortElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "MessageSort");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSynchCallEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSynchCallSynchCallKeyword_0_0 = (Keyword)cSynchCallEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cCreateMessageEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cCreateMessageCreateMessageKeyword_1_0 = (Keyword)cCreateMessageEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cDeleteMessageEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cDeleteMessageDeleteMessageKeyword_2_0 = (Keyword)cDeleteMessageEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cReplyEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cReplyReplyKeyword_3_0 = (Keyword)cReplyEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum MessageSort:
		//	synchCall | createMessage | deleteMessage | reply;
		public EnumRule getRule() { return rule; }

		//synchCall | createMessage | deleteMessage | reply
		public Alternatives getAlternatives() { return cAlternatives; }

		//synchCall
		public EnumLiteralDeclaration getSynchCallEnumLiteralDeclaration_0() { return cSynchCallEnumLiteralDeclaration_0; }

		//"synchCall"
		public Keyword getSynchCallSynchCallKeyword_0_0() { return cSynchCallSynchCallKeyword_0_0; }

		//createMessage
		public EnumLiteralDeclaration getCreateMessageEnumLiteralDeclaration_1() { return cCreateMessageEnumLiteralDeclaration_1; }

		//"createMessage"
		public Keyword getCreateMessageCreateMessageKeyword_1_0() { return cCreateMessageCreateMessageKeyword_1_0; }

		//deleteMessage
		public EnumLiteralDeclaration getDeleteMessageEnumLiteralDeclaration_2() { return cDeleteMessageEnumLiteralDeclaration_2; }

		//"deleteMessage"
		public Keyword getDeleteMessageDeleteMessageKeyword_2_0() { return cDeleteMessageDeleteMessageKeyword_2_0; }

		//reply
		public EnumLiteralDeclaration getReplyEnumLiteralDeclaration_3() { return cReplyEnumLiteralDeclaration_3; }

		//"reply"
		public Keyword getReplyReplyKeyword_3_0() { return cReplyReplyKeyword_3_0; }
	}

	public class ReferenceTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "ReferenceType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cCompositionEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cCompositionAsteriskKeyword_0_0 = (Keyword)cCompositionEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cAggregationEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cAggregationOKeyword_1_0 = (Keyword)cAggregationEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum ReferenceType:
		//	Composition="*" | Aggregation="o";
		public EnumRule getRule() { return rule; }

		//Composition="*" | Aggregation="o"
		public Alternatives getAlternatives() { return cAlternatives; }

		//Composition="*"
		public EnumLiteralDeclaration getCompositionEnumLiteralDeclaration_0() { return cCompositionEnumLiteralDeclaration_0; }

		//"*"
		public Keyword getCompositionAsteriskKeyword_0_0() { return cCompositionAsteriskKeyword_0_0; }

		//Aggregation="o"
		public EnumLiteralDeclaration getAggregationEnumLiteralDeclaration_1() { return cAggregationEnumLiteralDeclaration_1; }

		//"o"
		public Keyword getAggregationOKeyword_1_0() { return cAggregationOKeyword_1_0; }
	}

	public class InteractionOperatorKindElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "InteractionOperatorKind");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cAltEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cAltAltKeyword_0_0 = (Keyword)cAltEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cOptEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cOptOptKeyword_1_0 = (Keyword)cOptEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cLoopEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cLoopLoopKeyword_2_0 = (Keyword)cLoopEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum InteractionOperatorKind:
		//	alt | opt | loop;
		public EnumRule getRule() { return rule; }

		//alt | opt | loop
		public Alternatives getAlternatives() { return cAlternatives; }

		//alt
		public EnumLiteralDeclaration getAltEnumLiteralDeclaration_0() { return cAltEnumLiteralDeclaration_0; }

		//"alt"
		public Keyword getAltAltKeyword_0_0() { return cAltAltKeyword_0_0; }

		//opt
		public EnumLiteralDeclaration getOptEnumLiteralDeclaration_1() { return cOptEnumLiteralDeclaration_1; }

		//"opt"
		public Keyword getOptOptKeyword_1_0() { return cOptOptKeyword_1_0; }

		//loop
		public EnumLiteralDeclaration getLoopEnumLiteralDeclaration_2() { return cLoopEnumLiteralDeclaration_2; }

		//"loop"
		public Keyword getLoopLoopKeyword_2_0() { return cLoopLoopKeyword_2_0; }
	}

	public class OcurrenceTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "OcurrenceType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cOriginalEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cOriginalAsteriskKeyword_0_0 = (Keyword)cOriginalEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDestructionEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDestructionXKeyword_1_0 = (Keyword)cDestructionEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum OcurrenceType returns textRam::OcurrenceType:
		//	original="*" | destruction="X";
		public EnumRule getRule() { return rule; }

		//original="*" | destruction="X"
		public Alternatives getAlternatives() { return cAlternatives; }

		//original="*"
		public EnumLiteralDeclaration getOriginalEnumLiteralDeclaration_0() { return cOriginalEnumLiteralDeclaration_0; }

		//"*"
		public Keyword getOriginalAsteriskKeyword_0_0() { return cOriginalAsteriskKeyword_0_0; }

		//destruction="X"
		public EnumLiteralDeclaration getDestructionEnumLiteralDeclaration_1() { return cDestructionEnumLiteralDeclaration_1; }

		//"X"
		public Keyword getDestructionXKeyword_1_0() { return cDestructionXKeyword_1_0; }
	}

	public class TLifelineReferenceTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "TLifelineReferenceType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cReferenceEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cReferenceRefKeyword_0_0 = (Keyword)cReferenceEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cAssociationEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cAssociationAssocKeyword_1_0 = (Keyword)cAssociationEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cAttributeEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cAttributeAttrKeyword_2_0 = (Keyword)cAttributeEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum TLifelineReferenceType returns textRam::TLifelineReferenceType:
		//	reference="ref" | association="assoc" | attribute="attr";
		public EnumRule getRule() { return rule; }

		//reference="ref" | association="assoc" | attribute="attr"
		public Alternatives getAlternatives() { return cAlternatives; }

		//reference="ref"
		public EnumLiteralDeclaration getReferenceEnumLiteralDeclaration_0() { return cReferenceEnumLiteralDeclaration_0; }

		//"ref"
		public Keyword getReferenceRefKeyword_0_0() { return cReferenceRefKeyword_0_0; }

		//association="assoc"
		public EnumLiteralDeclaration getAssociationEnumLiteralDeclaration_1() { return cAssociationEnumLiteralDeclaration_1; }

		//"assoc"
		public Keyword getAssociationAssocKeyword_1_0() { return cAssociationAssocKeyword_1_0; }

		//attribute="attr"
		public EnumLiteralDeclaration getAttributeEnumLiteralDeclaration_2() { return cAttributeEnumLiteralDeclaration_2; }

		//"attr"
		public Keyword getAttributeAttrKeyword_2_0() { return cAttributeAttrKeyword_2_0; }
	}
	
	private AspectElements pAspect;
	private TAspectElements pTAspect;
	private TerminalRule tTEMPLATE;
	private EStringElements pEString;
	private EIntElements pEInt;
	private AbstractStructuralViewElements pAbstractStructuralView;
	private TAbstractMessageViewElements pTAbstractMessageView;
	private TStructuralViewElements pTStructuralView;
	private ClassifierElements pClassifier;
	private TypeElements pType;
	private ObjectTypeElements pObjectType;
	private PrimitiveTypeElements pPrimitiveType;
	private RStringElements pRString;
	private RFloatElements pRFloat;
	private RDoubleElements pRDouble;
	private RAnyElements pRAny;
	private RCharElements pRChar;
	private RIntElements pRInt;
	private RBooleanElements pRBoolean;
	private RVoidElements pRVoid;
	private RSetElements pRSet;
	private AbstractClassElements pAbstractClass;
	private TClassMemberElements pTClassMember;
	private TClassElements pTClass;
	private TAttributeElements pTAttribute;
	private TOperationElements pTOperation;
	private TParameterElements pTParameter;
	private TAssociationElements pTAssociation;
	private TAssociationEndElements pTAssociationEnd;
	private ElementBoundElements pElementBound;
	private TInstantiationHeaderElements pTInstantiationHeader;
	private InstantiationElements pInstantiation;
	private AbstractClassifierMappingElements pAbstractClassifierMapping;
	private TClassifierMappingElements pTClassifierMapping;
	private TAbstractMessagesElements pTAbstractMessages;
	private TMessageViewElements pTMessageView;
	private TAspectMessageViewElements pTAspectMessageView;
	private TLifelineElements pTLifeline;
	private TValueSpecificationElements pTValueSpecification;
	private TDummyValueSpecificationElements pTDummyValueSpecification;
	private TTemporaryPropertyElements pTTemporaryProperty;
	private TReferenceElements pTReference;
	private TLocalAttributeElements pTLocalAttribute;
	private TInteractionElements pTInteraction;
	private TOcurrenceElements pTOcurrence;
	private TInteractionMessageElements pTInteractionMessage;
	private TCombinedFragmentElements pTCombinedFragment;
	private TAbstractMessageElements pTAbstractMessage;
	private TReturnMessageElements pTReturnMessage;
	private TMessageElements pTMessage;
	private TTypedElementElements pTTypedElement;
	private TMessageAssignableFeatureElements pTMessageAssignableFeature;
	private LiteralStringElements pLiteralString;
	private VisibilityElements unknownRuleVisibility;
	private InstantiationTypeElements unknownRuleInstantiationType;
	private MessageSortElements unknownRuleMessageSort;
	private ReferenceTypeElements unknownRuleReferenceType;
	private InteractionOperatorKindElements unknownRuleInteractionOperatorKind;
	private OcurrenceTypeElements unknownRuleOcurrenceType;
	private TLifelineReferenceTypeElements unknownRuleTLifelineReferenceType;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public TextRAMGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("cl.uchile.pleiad.TextRAM".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Aspect:
	//	TAspect;
	public AspectElements getAspectAccess() {
		return (pAspect != null) ? pAspect : (pAspect = new AspectElements());
	}
	
	public ParserRule getAspectRule() {
		return getAspectAccess().getRule();
	}

	//TAspect returns textRam::TAspect:
	//	"aspect" name=EString (headerInstantiations+=TInstantiationHeader (","? headerInstantiations+=TInstantiationHeader)*)?
	//	"{" structuralView=TStructuralView ("instantiations" "{" instantiations+=Instantiation (";"?
	//	instantiations+=Instantiation)* "}")? ("messages" "{" messageViews+=TAbstractMessageView "}")? "}";
	public TAspectElements getTAspectAccess() {
		return (pTAspect != null) ? pTAspect : (pTAspect = new TAspectElements());
	}
	
	public ParserRule getTAspectRule() {
		return getTAspectAccess().getRule();
	}

	//terminal TEMPLATE:
	//	(ID "<" ID ">")*;
	public TerminalRule getTEMPLATERule() {
		return (tTEMPLATE != null) ? tTEMPLATE : (tTEMPLATE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "TEMPLATE"));
	} 

	//EString returns ecore::EString:
	//	STRING | ID | TEMPLATE;
	public EStringElements getEStringAccess() {
		return (pEString != null) ? pEString : (pEString = new EStringElements());
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}

	//EInt returns ecore::EInt:
	//	"-"? INT;
	public EIntElements getEIntAccess() {
		return (pEInt != null) ? pEInt : (pEInt = new EIntElements());
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}

	//AbstractStructuralView returns StructuralView:
	//	TStructuralView;
	public AbstractStructuralViewElements getAbstractStructuralViewAccess() {
		return (pAbstractStructuralView != null) ? pAbstractStructuralView : (pAbstractStructuralView = new AbstractStructuralViewElements());
	}
	
	public ParserRule getAbstractStructuralViewRule() {
		return getAbstractStructuralViewAccess().getRule();
	}

	//TAbstractMessageView returns AbstractMessageView:
	//	{textRam::TAbstractMessageView} "lifelines" "{" lifelines+=TLifeline (";"? lifelines+=TLifeline)* "}"
	//	messages+=TAbstractMessages messages+=TAbstractMessages*;
	public TAbstractMessageViewElements getTAbstractMessageViewAccess() {
		return (pTAbstractMessageView != null) ? pTAbstractMessageView : (pTAbstractMessageView = new TAbstractMessageViewElements());
	}
	
	public ParserRule getTAbstractMessageViewRule() {
		return getTAbstractMessageViewAccess().getRule();
	}

	//TStructuralView returns textRam::TStructuralView:
	//	{textRam::TStructuralView} "structure" "{" (classes+=Classifier classes+=Classifier*)? ("associations" "{"
	//	tAssociations+=TAssociation (";"? tAssociations+=TAssociation)* "}")? "}";
	public TStructuralViewElements getTStructuralViewAccess() {
		return (pTStructuralView != null) ? pTStructuralView : (pTStructuralView = new TStructuralViewElements());
	}
	
	public ParserRule getTStructuralViewRule() {
		return getTStructuralViewAccess().getRule();
	}

	//Classifier:
	//	TClass;
	public ClassifierElements getClassifierAccess() {
		return (pClassifier != null) ? pClassifier : (pClassifier = new ClassifierElements());
	}
	
	public ParserRule getClassifierRule() {
		return getClassifierAccess().getRule();
	}

	//Type:
	//	TClass | RVoid | RBoolean | RInt | RChar | RString | RAny | RDouble | RFloat | RSet;
	public TypeElements getTypeAccess() {
		return (pType != null) ? pType : (pType = new TypeElements());
	}
	
	public ParserRule getTypeRule() {
		return getTypeAccess().getRule();
	}

	//ObjectType:
	//	TClass | RBoolean | RInt | RChar | RString | RDouble | RFloat | RSet;
	public ObjectTypeElements getObjectTypeAccess() {
		return (pObjectType != null) ? pObjectType : (pObjectType = new ObjectTypeElements());
	}
	
	public ParserRule getObjectTypeRule() {
		return getObjectTypeAccess().getRule();
	}

	//// | REnum;
	//PrimitiveType:
	//	RBoolean | RInt | RChar | RString | RDouble | RFloat;
	public PrimitiveTypeElements getPrimitiveTypeAccess() {
		return (pPrimitiveType != null) ? pPrimitiveType : (pPrimitiveType = new PrimitiveTypeElements());
	}
	
	public ParserRule getPrimitiveTypeRule() {
		return getPrimitiveTypeAccess().getRule();
	}

	//RString:
	//	{RString};
	public RStringElements getRStringAccess() {
		return (pRString != null) ? pRString : (pRString = new RStringElements());
	}
	
	public ParserRule getRStringRule() {
		return getRStringAccess().getRule();
	}

	//RFloat:
	//	{RFloat};
	public RFloatElements getRFloatAccess() {
		return (pRFloat != null) ? pRFloat : (pRFloat = new RFloatElements());
	}
	
	public ParserRule getRFloatRule() {
		return getRFloatAccess().getRule();
	}

	//RDouble:
	//	{RDouble};
	public RDoubleElements getRDoubleAccess() {
		return (pRDouble != null) ? pRDouble : (pRDouble = new RDoubleElements());
	}
	
	public ParserRule getRDoubleRule() {
		return getRDoubleAccess().getRule();
	}

	//RAny:
	//	{RAny};
	public RAnyElements getRAnyAccess() {
		return (pRAny != null) ? pRAny : (pRAny = new RAnyElements());
	}
	
	public ParserRule getRAnyRule() {
		return getRAnyAccess().getRule();
	}

	//RChar:
	//	{RChar};
	public RCharElements getRCharAccess() {
		return (pRChar != null) ? pRChar : (pRChar = new RCharElements());
	}
	
	public ParserRule getRCharRule() {
		return getRCharAccess().getRule();
	}

	//RInt:
	//	{RInt};
	public RIntElements getRIntAccess() {
		return (pRInt != null) ? pRInt : (pRInt = new RIntElements());
	}
	
	public ParserRule getRIntRule() {
		return getRIntAccess().getRule();
	}

	//RBoolean:
	//	{RBoolean};
	public RBooleanElements getRBooleanAccess() {
		return (pRBoolean != null) ? pRBoolean : (pRBoolean = new RBooleanElements());
	}
	
	public ParserRule getRBooleanRule() {
		return getRBooleanAccess().getRule();
	}

	//RVoid:
	//	{RVoid};
	public RVoidElements getRVoidAccess() {
		return (pRVoid != null) ? pRVoid : (pRVoid = new RVoidElements());
	}
	
	public ParserRule getRVoidRule() {
		return getRVoidAccess().getRule();
	}

	//RSet:
	//	{RSet};
	public RSetElements getRSetAccess() {
		return (pRSet != null) ? pRSet : (pRSet = new RSetElements());
	}
	
	public ParserRule getRSetRule() {
		return getRSetAccess().getRule();
	}

	//AbstractClass returns Class:
	//	TClass;
	public AbstractClassElements getAbstractClassAccess() {
		return (pAbstractClass != null) ? pAbstractClass : (pAbstractClass = new AbstractClassElements());
	}
	
	public ParserRule getAbstractClassRule() {
		return getAbstractClassAccess().getRule();
	}

	//TClassMember returns textRam::TClassMember:
	//	TAttribute | TOperation;
	public TClassMemberElements getTClassMemberAccess() {
		return (pTClassMember != null) ? pTClassMember : (pTClassMember = new TClassMemberElements());
	}
	
	public ParserRule getTClassMemberRule() {
		return getTClassMemberAccess().getRule();
	}

	//TClass returns textRam::TClass:
	//	{textRam::TClass} abstract?="abstract"? "class" partial?="|"? name=EString (":" partialSuperType?="|"?
	//	superTypes+=[Classifier|EString])? "{" (members+=TClassMember (";"? members+=TClassMember)*)? "}";
	public TClassElements getTClassAccess() {
		return (pTClass != null) ? pTClass : (pTClass = new TClassElements());
	}
	
	public ParserRule getTClassRule() {
		return getTClassAccess().getRule();
	}

	//TAttribute returns textRam::TAttribute:
	//	static?="static"? type=[PrimitiveType|EString] partial?="|"? name=EString;
	public TAttributeElements getTAttributeAccess() {
		return (pTAttribute != null) ? pTAttribute : (pTAttribute = new TAttributeElements());
	}
	
	public ParserRule getTAttributeRule() {
		return getTAttributeAccess().getRule();
	}

	//TOperation returns textRam::TOperation:
	//	{textRam::TOperation} abstract?="abstract"? static?="static"? visibility=Visibility partialReturnType?="|"?
	//	returnType=[Type|EString] partial?="|"? name=EString "(" (parameters+=TParameter ("," parameters+=TParameter)*)? ")";
	public TOperationElements getTOperationAccess() {
		return (pTOperation != null) ? pTOperation : (pTOperation = new TOperationElements());
	}
	
	public ParserRule getTOperationRule() {
		return getTOperationAccess().getRule();
	}

	//TParameter returns textRam::TParameter:
	//	partialType?="|"? type=[Type|EString] name=EString;
	public TParameterElements getTParameterAccess() {
		return (pTParameter != null) ? pTParameter : (pTParameter = new TParameterElements());
	}
	
	public ParserRule getTParameterRule() {
		return getTParameterAccess().getRule();
	}

	//TAssociation returns textRam::TAssociation:
	//	{textRam::TAssociation} fromEnd=TAssociationEnd referenceType=ReferenceType? "->" toEnd=TAssociationEnd "{"
	//	name=EString "}";
	public TAssociationElements getTAssociationAccess() {
		return (pTAssociation != null) ? pTAssociation : (pTAssociation = new TAssociationElements());
	}
	
	public ParserRule getTAssociationRule() {
		return getTAssociationAccess().getRule();
	}

	//TAssociationEnd returns textRam::TAssociationEnd:
	//	{textRam::TAssociationEnd} (lowerBound=ElementBound "..")? upperBound=ElementBound? classReference=[Class|EString];
	public TAssociationEndElements getTAssociationEndAccess() {
		return (pTAssociationEnd != null) ? pTAssociationEnd : (pTAssociationEnd = new TAssociationEndElements());
	}
	
	public ParserRule getTAssociationEndRule() {
		return getTAssociationEndAccess().getRule();
	}

	//ElementBound returns ecore::EInt:
	//	"*" | INT;
	public ElementBoundElements getElementBoundAccess() {
		return (pElementBound != null) ? pElementBound : (pElementBound = new ElementBoundElements());
	}
	
	public ParserRule getElementBoundRule() {
		return getElementBoundAccess().getRule();
	}

	//TInstantiationHeader returns textRam::TInstantiationHeader:
	//	type=InstantiationType externalAspects+=[Aspect|EString] ("," externalAspects+=[Aspect|EString])*;
	public TInstantiationHeaderElements getTInstantiationHeaderAccess() {
		return (pTInstantiationHeader != null) ? pTInstantiationHeader : (pTInstantiationHeader = new TInstantiationHeaderElements());
	}
	
	public ParserRule getTInstantiationHeaderRule() {
		return getTInstantiationHeaderAccess().getRule();
	}

	//Instantiation:
	//	externalAspect=[Aspect|EString] ("{" mappings+=TClassifierMapping (";"? mappings+=TClassifierMapping)* "}")?;
	public InstantiationElements getInstantiationAccess() {
		return (pInstantiation != null) ? pInstantiation : (pInstantiation = new InstantiationElements());
	}
	
	public ParserRule getInstantiationRule() {
		return getInstantiationAccess().getRule();
	}

	//AbstractClassifierMapping returns ClassifierMapping:
	//	TClassifierMapping;
	public AbstractClassifierMappingElements getAbstractClassifierMappingAccess() {
		return (pAbstractClassifierMapping != null) ? pAbstractClassifierMapping : (pAbstractClassifierMapping = new AbstractClassifierMappingElements());
	}
	
	public ParserRule getAbstractClassifierMappingRule() {
		return getAbstractClassifierMappingAccess().getRule();
	}

	//TClassifierMapping returns textRam::TClassifierMapping:
	//	partialFromElement?="|"? fromElement=[Classifier|EString] ("<" fromMembers+=[textRam::TClassMember|EString] (","
	//	fromMembers+=[textRam::TClassMember|EString])* ">")? "->" partialToElement?="|"? toElement=[Classifier|EString] ("<"
	//	toMembers+=[textRam::TClassMember|EString] ("," toMembers+=[textRam::TClassMember|EString])* ">")?;
	public TClassifierMappingElements getTClassifierMappingAccess() {
		return (pTClassifierMapping != null) ? pTClassifierMapping : (pTClassifierMapping = new TClassifierMappingElements());
	}
	
	public ParserRule getTClassifierMappingRule() {
		return getTClassifierMappingAccess().getRule();
	}

	//TAbstractMessages returns textRam::TAbstractMessages:
	//	TMessageView | TAspectMessageView;
	public TAbstractMessagesElements getTAbstractMessagesAccess() {
		return (pTAbstractMessages != null) ? pTAbstractMessages : (pTAbstractMessages = new TAbstractMessagesElements());
	}
	
	public ParserRule getTAbstractMessagesRule() {
		return getTAbstractMessagesAccess().getRule();
	}

	//TMessageView returns textRam::TMessageView:
	//	{textRam::TMessageView} "messageView" create?="new"? partialClass?="|"? class=[textRam::TClass|EString] "."
	//	partialOperation?="|"? specifies=[textRam::TOperation|EString] "(" (arguments+=[textRam::TParameter|EString] (","
	//	arguments+=[textRam::TParameter|EString])*)? ")" ("affectedBy" affectedBy+=[textRam::TAspectMessageView|EString] (","
	//	affectedBy+=[textRam::TAspectMessageView|EString]*)?)? ("{" interactionMessages+=TInteraction (";"?
	//	interactionMessages+=TInteraction)* "}")?;
	public TMessageViewElements getTMessageViewAccess() {
		return (pTMessageView != null) ? pTMessageView : (pTMessageView = new TMessageViewElements());
	}
	
	public ParserRule getTMessageViewRule() {
		return getTMessageViewAccess().getRule();
	}

	//TAspectMessageView returns textRam::TAspectMessageView:
	//	{textRam::TAspectMessageView} "aspectMessageView" name=EString "{" "pointcut" create?="new"? (partialClass?="|"?
	//	class=[textRam::TClass|EString] ".")? partialOperation?="|"? specifies=[textRam::TOperation|EString] "("
	//	(arguments+=[textRam::TParameter|EString] ("," arguments+=[textRam::TParameter|EString])?)? ")" "advice" "{"
	//	interactionMessages+=TInteraction (";"? interactionMessages+=TInteraction)* "}" "}";
	public TAspectMessageViewElements getTAspectMessageViewAccess() {
		return (pTAspectMessageView != null) ? pTAspectMessageView : (pTAspectMessageView = new TAspectMessageViewElements());
	}
	
	public ParserRule getTAspectMessageViewRule() {
		return getTAspectMessageViewAccess().getRule();
	}

	//TLifeline returns textRam::TLifeline:
	//	static?="static"? referenceType=TLifelineReferenceType name=EString ":" represents=[textRam::TTypedElement|EString]?
	//	("{" localProperties+=TTemporaryProperty (";"? localProperties+=TTemporaryProperty)* "}")?;
	public TLifelineElements getTLifelineAccess() {
		return (pTLifeline != null) ? pTLifeline : (pTLifeline = new TLifelineElements());
	}
	
	public ParserRule getTLifelineRule() {
		return getTLifelineAccess().getRule();
	}

	//TValueSpecification returns textRam::TValueSpecification:
	//	TTemporaryProperty | TParameter | TLifeline | TDummyValueSpecification;
	public TValueSpecificationElements getTValueSpecificationAccess() {
		return (pTValueSpecification != null) ? pTValueSpecification : (pTValueSpecification = new TValueSpecificationElements());
	}
	
	public ParserRule getTValueSpecificationRule() {
		return getTValueSpecificationAccess().getRule();
	}

	//TDummyValueSpecification returns textRam::TDummyValueSpecification:
	//	dummy?="true";
	public TDummyValueSpecificationElements getTDummyValueSpecificationAccess() {
		return (pTDummyValueSpecification != null) ? pTDummyValueSpecification : (pTDummyValueSpecification = new TDummyValueSpecificationElements());
	}
	
	public ParserRule getTDummyValueSpecificationRule() {
		return getTDummyValueSpecificationAccess().getRule();
	}

	//TTemporaryProperty returns textRam::TTemporaryProperty:
	//	TReference | TLocalAttribute;
	public TTemporaryPropertyElements getTTemporaryPropertyAccess() {
		return (pTTemporaryProperty != null) ? pTTemporaryProperty : (pTTemporaryProperty = new TTemporaryPropertyElements());
	}
	
	public ParserRule getTTemporaryPropertyRule() {
		return getTTemporaryPropertyAccess().getRule();
	}

	//TReference returns textRam::TReference:
	//	name=EString ":" partialClass?="|"? reference=[textRam::TClass|EString];
	public TReferenceElements getTReferenceAccess() {
		return (pTReference != null) ? pTReference : (pTReference = new TReferenceElements());
	}
	
	public ParserRule getTReferenceRule() {
		return getTReferenceAccess().getRule();
	}

	//TLocalAttribute returns textRam::TLocalAttribute:
	//	type=[PrimitiveType|EString] name=EString ("=" value=EString)?;
	public TLocalAttributeElements getTLocalAttributeAccess() {
		return (pTLocalAttribute != null) ? pTLocalAttribute : (pTLocalAttribute = new TLocalAttributeElements());
	}
	
	public ParserRule getTLocalAttributeRule() {
		return getTLocalAttributeAccess().getRule();
	}

	//TInteraction returns textRam::TInteraction:
	//	TInteractionMessage | TCombinedFragment | TOcurrence;
	public TInteractionElements getTInteractionAccess() {
		return (pTInteraction != null) ? pTInteraction : (pTInteraction = new TInteractionElements());
	}
	
	public ParserRule getTInteractionRule() {
		return getTInteractionAccess().getRule();
	}

	//TOcurrence returns textRam::TOcurrence:
	//	leftLifeline=[textRam::TLifeline|EString] "=>" ocurrenceType=OcurrenceType;
	public TOcurrenceElements getTOcurrenceAccess() {
		return (pTOcurrence != null) ? pTOcurrence : (pTOcurrence = new TOcurrenceElements());
	}
	
	public ParserRule getTOcurrenceRule() {
		return getTOcurrenceAccess().getRule();
	}

	//TInteractionMessage returns textRam::TInteractionMessage:
	//	leftLifeline=[textRam::TLifeline|EString] "=>" create?="new"? rightLifeline=[textRam::TLifeline|EString] ("{"
	//	message=TAbstractMessage "}")?;
	public TInteractionMessageElements getTInteractionMessageAccess() {
		return (pTInteractionMessage != null) ? pTInteractionMessage : (pTInteractionMessage = new TInteractionMessageElements());
	}
	
	public ParserRule getTInteractionMessageRule() {
		return getTInteractionMessageAccess().getRule();
	}

	//TCombinedFragment returns textRam::TCombinedFragment:
	//	interactionOperator=InteractionOperatorKind "[" interactionConstraint=EString "]" "{" containers+=TInteraction
	//	containers+=TInteraction* "}" ("else" "{" elseContainers+=TInteraction elseContainers+=TInteraction* "}")?;
	public TCombinedFragmentElements getTCombinedFragmentAccess() {
		return (pTCombinedFragment != null) ? pTCombinedFragment : (pTCombinedFragment = new TCombinedFragmentElements());
	}
	
	public ParserRule getTCombinedFragmentRule() {
		return getTCombinedFragmentAccess().getRule();
	}

	//TAbstractMessage returns textRam::TAbstractMessage:
	//	TMessage | TReturnMessage;
	public TAbstractMessageElements getTAbstractMessageAccess() {
		return (pTAbstractMessage != null) ? pTAbstractMessage : (pTAbstractMessage = new TAbstractMessageElements());
	}
	
	public ParserRule getTAbstractMessageRule() {
		return getTAbstractMessageAccess().getRule();
	}

	//TReturnMessage returns textRam::TReturnMessage:
	//	assignTo=[textRam::TMessageAssignableFeature|EString];
	public TReturnMessageElements getTReturnMessageAccess() {
		return (pTReturnMessage != null) ? pTReturnMessage : (pTReturnMessage = new TReturnMessageElements());
	}
	
	public ParserRule getTReturnMessageRule() {
		return getTReturnMessageAccess().getRule();
	}

	//TMessage returns textRam::TMessage:
	//	(assignTo=[textRam::TMessageAssignableFeature|EString] ":=")? partialOperation?="|"?
	//	signature=[textRam::TOperation|EString] "(" (arguments+=[textRam::TValueSpecification|EString] (","
	//	arguments+=[textRam::TValueSpecification|EString])?)? ")";
	public TMessageElements getTMessageAccess() {
		return (pTMessage != null) ? pTMessage : (pTMessage = new TMessageElements());
	}
	
	public ParserRule getTMessageRule() {
		return getTMessageAccess().getRule();
	}

	////TODO: It should be StructuralFeature | Parameter
	//TTypedElement returns textRam::TTypedElement:
	//	TAssociation | TAttribute | TClass;
	public TTypedElementElements getTTypedElementAccess() {
		return (pTTypedElement != null) ? pTTypedElement : (pTTypedElement = new TTypedElementElements());
	}
	
	public ParserRule getTTypedElementRule() {
		return getTTypedElementAccess().getRule();
	}

	////AssignableFeature
	//TMessageAssignableFeature returns textRam::TMessageAssignableFeature:
	//	TAssociation | TTemporaryProperty | TLifeline;
	public TMessageAssignableFeatureElements getTMessageAssignableFeatureAccess() {
		return (pTMessageAssignableFeature != null) ? pTMessageAssignableFeature : (pTMessageAssignableFeature = new TMessageAssignableFeatureElements());
	}
	
	public ParserRule getTMessageAssignableFeatureRule() {
		return getTMessageAssignableFeatureAccess().getRule();
	}

	//LiteralString:
	//	{LiteralString};
	public LiteralStringElements getLiteralStringAccess() {
		return (pLiteralString != null) ? pLiteralString : (pLiteralString = new LiteralStringElements());
	}
	
	public ParserRule getLiteralStringRule() {
		return getLiteralStringAccess().getRule();
	}

	//enum Visibility:
	//	public="+" | private="-" | protected="#" | package="~";
	public VisibilityElements getVisibilityAccess() {
		return (unknownRuleVisibility != null) ? unknownRuleVisibility : (unknownRuleVisibility = new VisibilityElements());
	}
	
	public EnumRule getVisibilityRule() {
		return getVisibilityAccess().getRule();
	}

	//enum InstantiationType:
	//	Depends="dependsOn" | Extends="extends";
	public InstantiationTypeElements getInstantiationTypeAccess() {
		return (unknownRuleInstantiationType != null) ? unknownRuleInstantiationType : (unknownRuleInstantiationType = new InstantiationTypeElements());
	}
	
	public EnumRule getInstantiationTypeRule() {
		return getInstantiationTypeAccess().getRule();
	}

	//enum MessageSort:
	//	synchCall | createMessage | deleteMessage | reply;
	public MessageSortElements getMessageSortAccess() {
		return (unknownRuleMessageSort != null) ? unknownRuleMessageSort : (unknownRuleMessageSort = new MessageSortElements());
	}
	
	public EnumRule getMessageSortRule() {
		return getMessageSortAccess().getRule();
	}

	//enum ReferenceType:
	//	Composition="*" | Aggregation="o";
	public ReferenceTypeElements getReferenceTypeAccess() {
		return (unknownRuleReferenceType != null) ? unknownRuleReferenceType : (unknownRuleReferenceType = new ReferenceTypeElements());
	}
	
	public EnumRule getReferenceTypeRule() {
		return getReferenceTypeAccess().getRule();
	}

	//enum InteractionOperatorKind:
	//	alt | opt | loop;
	public InteractionOperatorKindElements getInteractionOperatorKindAccess() {
		return (unknownRuleInteractionOperatorKind != null) ? unknownRuleInteractionOperatorKind : (unknownRuleInteractionOperatorKind = new InteractionOperatorKindElements());
	}
	
	public EnumRule getInteractionOperatorKindRule() {
		return getInteractionOperatorKindAccess().getRule();
	}

	//enum OcurrenceType returns textRam::OcurrenceType:
	//	original="*" | destruction="X";
	public OcurrenceTypeElements getOcurrenceTypeAccess() {
		return (unknownRuleOcurrenceType != null) ? unknownRuleOcurrenceType : (unknownRuleOcurrenceType = new OcurrenceTypeElements());
	}
	
	public EnumRule getOcurrenceTypeRule() {
		return getOcurrenceTypeAccess().getRule();
	}

	//enum TLifelineReferenceType returns textRam::TLifelineReferenceType:
	//	reference="ref" | association="assoc" | attribute="attr";
	public TLifelineReferenceTypeElements getTLifelineReferenceTypeAccess() {
		return (unknownRuleTLifelineReferenceType != null) ? unknownRuleTLifelineReferenceType : (unknownRuleTLifelineReferenceType = new TLifelineReferenceTypeElements());
	}
	
	public EnumRule getTLifelineReferenceTypeRule() {
		return getTLifelineReferenceTypeAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
