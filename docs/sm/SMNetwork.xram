aspect SMNetwork extends Betting dependsOn Named, ReturningCommand {
	
	structure {
		
		class |Result {}
		
		class |MeterResult : |Result {
			+ |MeterResult create(int value)
		}
		
		class MeterRepository {
			+ int getValueOfMeter(String name)
		}
		
		class |SMCommand {
			~ |Result execute()
		}
		
		class |ReadMeterCommand {
			~ |Result execute()
			+ String getMeterName()
		} 
		
		class NetworkCommandExecutor {
			+ void receiveCommand(|SMCommand com)
			+ void sendMessage(|Result res)
		}    
	}             
	 
	instantiations {
		ReturningCommand {
			|Command <execute> -> |SMCommand <execute>
		}
		Named { 
			|Named <getName> -> |ReadMeterCommand <getMeterName>
		}     
	}
	
	messages {
		lifelines {
			ref target:NetworkCommandExecutor { result:|Result }
			ref com:SMCommand
			ref rmc:ReadMeterCommand { String name; int value; res:|MeterResult }
			ref mr:MeterRepository
			ref mres:MeterResult
		}
		
		messageView NetworkCommandExecutor.receiveCommand(com) {
			target => com { result := execute() }
			
			opt [ "result != null" ] {
				target => target { sendMessage(result) }
			}
		}
		
		messageView |ReadMeterCommand.execute() {
			rmc => rmc  { name  := getMeterName() }
			rmc => mr   { value := getValueOfMeter(name) }
			rmc => mres { res   := create(value) }
			
			return res
		}
	}
}      